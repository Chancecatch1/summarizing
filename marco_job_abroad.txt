7E49A343-F285-40A6-9A34-F63488EE0650
2023.04.05 수 오후 9:00 ・ 89분 39초
이명준

문제를 푸냐가 중요하다기보다는 그게 정말 중요하다기보다는 훨씬 이 사람이랑 내가 일을 하는데 이 사람이 정말 제대로 커뮤니케이션을 할 수 있을까가 훨씬 더 중요한 요소이기는 해요. 
그래서 예를 들어서 코딩 관련된 질문이 있고 이제 그게 온라인으로 그냥 시험 링크만 나눠서 그걸 푸는 문제냐 아니면 면접관이 함께 들어와 있는 코딩 테스트냐에 따라서 전혀 다를 수 있는데

만약에 그냥 이제 링크만 딱 날아와서 그걸 풀어야 되는 형태라면은 그거는 시간 내에 그냥 푸셔서 서비스 하셔야 되는 문제겠지만 만약에 면접관이 함께 들어오는 종류의 코딩 체스다라고 한다면 질문을 통해서 명확하지 않은 부분들에 대해서 명확하게 질문을 할 수 있는가 그리고 이제 내가 어떤 코드를 짰을 때

면접관이 추가적으로 질문을 하는 부분에 대해서 이 사람이 정말 이걸 어떤 생각을 하고 짰는지에 대해서 사실 계속 물어보려고 할 거거든요. 
그 과정에서 이 사람이 그냥 단순히 코드만 그냥 기계적으로 코드만 짠 게 아니라 자기의 생각을 좀 잘 표현할 수 있는가 그리고 기본적인 그런 기술적인 지식들을 갖추고 있는 것도 당연히 궁금하겠죠. 
그래서 이제 복잡도는 내가 짠 코드의 복잡도는 얼마나 되고 실행하는 데 있어서 얼마나 효율적인 코드를 짰는가 그런 것들을 이제 아마 굉장히 많이 물어 질문이 추가적으로 질문이 들어오게 될 텐데

사실 그런 것들은 이제 내가 왜 이 코드를 짜는지 사실 생각을 하면서 짜야 대답할 수 있는 부분들인 것 같기는 해요. 
그래서 네 만약에 조금 코딩 테스트를 이제 사이트들을 통해서 조금 진행을 해봤는데 그 부분에 대해서 조금 여유가 있다라고 생각이 되신다면 제가 방금 드렸던 종류의 질문들에 대해서도 스스로 한 문제 문제 푸시면서 이거는 이렇게 해서 내가 이런 코드를 짠 거고

그런 부분에 대한 스스로에 대한 질문을 계속해 주시면 아마 제 생각에는 조금 인터뷰 들어가서 더 유리하지 않을까 생각이 들고요

이제 아까 말씀드렸던 것처럼 지원하는 분야 주요 인터뷰 질문이라는 부분에서는 사이트 인터넷에 검색해 보면 굉장히 많이 나오거든요. 
그래서 반드시 내가 지원하는 업무에 대해서 한 50개짜리나 50개짜리 100개짜리 100개짜리

이거는 제 생각에는 이거는 그냥 공부를 하는 거 차원에서도 사실 인터뷰 준비를 하는 차원에서 과정에서 굉장히 공부가 사실 많이 되는 것 같아요. 
그래서 그냥 공부하신 거 생각하고 기술적인 bp를 싼다. 
생각하시고 네 그렇게 좀 진행해 주시면 좋을 것 같고 화면 공유가 잘 안 된다고 이야기해 주셨는데 지금 혹시 화면 공유 잘 되고 있을까요. 
네 되고 있습니다.

네 그 부분을 좀 생각해 주시면 좋을 것 같고 그다음으로는 포트폴리오가 있을 것 같습니다. 
포트폴리오를 그래서 뒷부분에다가 조금 제가 따로 주의사항을 한번 정리를 해봤어요. 
포트폴리오 관련된 질문을 되게 많이 해주셨더라고요 그래서 포트폴리오 어떻게 준비하면 좋냐라고 해주셨는데 일단은 너무 많은 프로젝트를 나열하지 않는다 저는 1번으로 뽑았어요. 
그래서 사실 이제 교육기관에서 교육을 수를 하시고 나면은 너무 많은 포트폴리오를 적을 게 없는 경우들도 사실은 있기는 한데

너무 짜잘짜잘한 것들 하루면 만들 수 있는 그런 프로젝트들 막 5개 10개씩 적는 거는 사실 면접관 입장에서 그리고 이력서를 받는 입장에서 사실 별로 도움이 되지는 않거든요. 
네 저는 만약에 제가 신입 개발자분을 제가 이제 뽑는다면 저도 이제 면접원으로 많이 들어가 보고 했었는데

그냥 자기가 제일 잘한 거 제일 공을 들인 포트폴리오에서 이분이 어떤 고민을 했고 어떻게 코드를 짰고 그 과정에서 내가 이후에 이제 면접에 로 포트폴리오를 들고 들어가서 면접을 해서 짠 부분들에 대해서 여러 가지 질문을 할 때 이거에 대해서 사실 잘 답변을 할 수 있는 가가 저한테 훨씬 더 중요한 요소인 것 같아요. 
그래서 제 생각에는 포트폴리오는 3개 이상을 넘기면 안 될 것 같고요 맥시멈 3개

3개 이상 넘어가는 건 저는 좀 과하다고 개인적으로 생각해요. 
물론 이제 전공생이시고 학교에서도 했던 프로젝트가 많았고 교육기관에서도 포트폴리오가 생겼다. 
그러면 모르겠어요. 그거는 조금 다른 문제인 것 같고 다만 그런 것들이 아니라 비교적 작은 사이즈의 프로젝트들이 그냥 숫자가 많이 채워져 있는 거 제 생각에는 오히려 그냥 너무 혼란스러운 것 같다라는 개인적으로 생각이 들고

마찬가지로 너무 많은 비율 수를 나열하지 않으셨으면 좋겠어요. 
파이썬을 썼다. 자바스크립트를 썼다. 
자바를 썼다. 리액트를 썼다. 그런 것들 엄청 많이 쓰시는데 시커를 썼다. 
대충 어떤 기능 어떤 서비스를 만들었는지에 대해서 쓰시면 거기에 필요한 기능들이 쭉 있을 테고

그렇기 때문에 그걸 굳이 하나하나 쓰시지 않으셔도 도대체 뭘 썼는지 다 알 수 있거든요. 
그래서 면접관이 보고 싶은 건 사실 그런 부분이 아니고 면접관으로서 궁금한 부분은 여러분이 이 서비스를 왜 어떻게 기획하시고 어떤 의도로 만드셨고 그래서 그거를 어느 지역 어느 정도의 기간 동안 몇 명이서 얼마만큼 어떻게 만들었고

그리고 이 전체 프로젝트에서 내가 뭘 기여했는가 정리하면 딱 그건 것 같아요. 
그래서 사실 그게 너무 중요한 부분이기 때문에 이제 거기에 조금 덧붙이면 내가 만든 프로젝트가 어떤 종류의 기능들이 있는가 예를 들면 크루드라고 하죠. 
그래서 crud 이제 기본적인 데이터가 들어가고 나오고 삭제되고 수정되고 이런 것들에 대한

예를 들어서 쇼핑몰 사이트를 포트폴리오로 만들어줬다고 했을 때 그 상품을 등록하고 수정하고 삭제한다든지 혹은 로그인을 처리를 했는데 로그인이 소셜 로그인을 붙였다든지 아니면 그냥 이메일 기반으로 처리를 하셨다든지

그게 aws에서 배포를 하셨다든지 아니면 벌셀 같은 요즘 프론트엔드 그런 서비스를 통해서 배포를 하셨다든지 그냥 그런 종류의 이 포트폴리오가 있고 그게 어떤 의도로 기획되었고 그 안에 어떤 기능들이 있고 그 안에서 내가 뭘 했는지 정도를 사실 정리를 하시는 게 면접관 그리고 채용하는 사람 입장에서 신입에게 가장 궁금한 부분이기는 합니다.

그래서 프로젝트 나열하시고 기술 나열하시는 거는 내가 딱 이제 이력서를 봤을 때 이분께서 잘 면접을 처음 보시는구나 취업 준비를 처음. 
하시는구나의 인상을 오히려 더 강하게 주는 것 같아요. 
그래서 그런 부분을 반영하면 좀 피하시면 좋을 것 같고 그리고 포트폴리오를 전달을 할 때 만약에 이제 그게 실제로 배포가 되어 있지 않다면 어쩔 수 없이 pdf나

그냥 ppt 형태로 전달해 주셔야겠지만 가장 베스트는 실제 사이트 링크가 있는 거예요. 
네 그래서 실제 도메인까지 구입하실 필요는 없더라도 요즘 벌셀이나 아니면 aws에서도 배포하고 나면 링크 같은 것들이 만들어지니까 사실 그런 종류의 실제 사이트 링크가 있으면 저는 가장 베스트라고 생각하거든요. 
그래서

그렇게 조금 뭔가 직접 볼 수 있는 형태로 준비해 주시고 뭔가 추가적으로 아까 이야기했던 것처럼 내가 어떤 기능을 예를 들어서 이 서비스를 어떤 예를 들어서 어떤 특정한 기능을 특정 라이브러리를 써서 만들었는데 그 라이브러리가 선택지의 그 라이브러리 하나가 아닐 수도 있잖아요. 
예를 들면 프론트 엔드 개발을 하실 때 리액트도 있고 그런 이제 비교적 다양한 라이브러리들이 있는데 그 라이브러리를 내가 여기에 왜 맞다고 생각해서 썼는지 그런 부분들

질문이 들어올 수가 있어요. 사실 리액트를 왜 선택했냐 정도의 너무 큰 질문은 사실 하지 않으실 것 같기는 한데 근데 이제 조금 더 세부적인 라이브러리들 같은 거를 쓰셨다고 했을 때 예를 들면 게이트 프로젝트라고 하면 리덕스나 오백스나 이런 종류의 이제 다양한 라이브러리들이 선택지들이 생기는데 그랬을 때 여러분이 이걸 왜 선택해서 쓰셨나는 정도의 질문들은 잘 들어올 수 있거든요. 
그래서 어떤 기술을 선택하셨을 때는 내가 그거를 왜 선택했는지 다른 대안들이 뭐가 있었는지 정도는 같이 좀 고민해 보시면 좋을 것 같다.

그리고 결국 포트폴리오는 물론 이제 면접관들에 따라서 포트폴리오를 그냥 대충 보고 들어오시는 경우들도 있기는 하지만 그럼에도 포트폴리오를 제출하고 면접관 면접을 보는 회사에서 받는 이유는 특히 신입 개발자분들에게 받는 이유는 그걸 그걸 통해서 질문을 하기 위한 거거든요. 
근데 이제 포트폴리오를 제출을 하셨는데 그 포트폴리오에서 물어봤네 이게 근데 사람이 기억력이라는 게 내가 이걸 직접 했어도

내가 이걸 어떻게 든지 3개월 정도만 지나도 기억이 잘 안 나요. 
그래서 이제 교육을 지금 받으시면서 포트폴리오를 만드실 텐데 그러면 이제 6개월에 걸쳐서 포트폴리오가 몇 개가 나왔겠죠. 
그러면 이거를 제출을 하실 때 내가 이걸 어떻게 코드를 짜는지 한번 한 번은 리뷰를 한번 하셔서 설명을 하실 수 있어야 돼요

이제 인터뷰에 들어갔는데 이 코드 입고 짜셨는데 어떻게 네이버 로지 어떻게 짜신 거예요. 
제가 너무 오래돼서 기억이 잘 안 나는데요. 
그렇게 말씀하시면 사실 그거는 포트폴리오를 제출하는 그런 이유가 좀 잘 없다라고 사실 생각이 듭니다. 
이 정도가 제 생각에는 이제 인터뷰 준비 과정에서 이제 면접 준비 과정에서 여러분들이 생각하셔야 되는 기본적인 부분들이 아닌가 싶어요. 
정리를 다시 한 번 하면

코딩 테스트와 이제 내가 지원하는 업무 분야의 주요 인터뷰 질문 그리고 포트폴리오를 준비를 하셔야 되는데 포트폴리오를 준비를 할 때는 이런 종류의 주의사항이 있다. 
이렇게 좀 정리를 해보면 좋을 것 같고 그 사이에 좀 질문을 많이 올려주셔가지고 네 제가 답변을 드리도록 하고

여기

이 부분에 대해서 기본 준비물과 포트폴리오 준비할 때 주의사항 이 부분에 대해서

질문 있으신 부분들을 또 추가적으로 제가 이제 요거 지금 질문해 주신 부분들 제가 답변드리는 동안 추가적으로 질문해 주시면 제가 거기에 맞춰가지고 추가적으로 질문해드리도록 할게요

아

많이 질문을 많이 해 주셨네요. 우선 아까 제가 답변을 못 드리고 넘어갔던 부분 저도 해외로 가고 싶은데 지금은 초급 개발자여서 잡아도 헤매고 있습니다. 
생각만 해도 해외 취업은 더 막막하지 않을까

시에서 하는 건데

3년 뒤에 이직한다면 코딩 실력 및 영어를 잘 준비하는 팁이 있을까요라는 질문해 주셨어요. 
사실 코딩 실력은 제 생각에는 회사를 3년 열심히 다니시면 사실 충분히 하실 수 있는 부분인 것 같아서 코딩 실력 자체는 크게 걱정 안 하셔도 될 것 같고 다만 준비하셔야 되는 부분들은

열 같은 날 이제

코딩 인터뷰를 영어로 보셔야 되니까 한국에서도 다양한 코딩 알고리즘 테스트 코딩 테스트 볼 수 있는 사이트들이 있는 걸로 아는데 그런 거 보시기보다는 이제 해외 유명 사이트들이 있거든요. 
그래서 그런 것들을 이용하셔가지고 코딩 면접 준비를 할 때

좀 영어로 문제를 읽고 문제를 풀고 그리고 그걸 설명하는 걸 영어로 답변하는 습관을 들이셔야 될 것 같고 영어를 잘 준비하는 팁은 사실 이제 만약에 3년 뒤에 해외로 취업하시고 싶은 목표가 있으시다고 하면 지금부터 사실 준비를 하셔야겠죠. 
이거 취업하고 난 다음에는 준비를 하셔야 될 것 같고

이제 이후에 조금 더 설명을 드릴 수 있겠지만 이제 해외 취업 관련된 부분이 있으니까요. 
근데 사실 개발자한테 기대하는 영어 수준이 그렇게 높지는 않아요. 
그러니까 내가 이번 주에 뭐 할 거야 오늘 뭐 했어 정도를 사실 영어로 설명할 수 있는 정도의 기대를 생각하는 건 기대를 하고요

대부분은 그리고 슬레이나 이런 텍스트를 기반으로 해서 커뮤니케이션이 이루어지기 때문에 사실 텍스트로 온 거는 잘 모르겠으면 다 사전 찾아보면 되고 그리고 하고 싶은 말 있으면 구글 번역기 돌려서 답변하면 되잖아요. 
사실 그런 것들은 큰 문제가 되지 않고 다만 이제 기본적으로 내가 지금 하고 있는 업무를 영어로 설명할 수 있는 수준의 커뮤니케이션을 기대를 하거든요. 
그래서 실제로 저도 지금 이제

직전에는 미국 팀이랑 같이 일을 했었고 미국 친구들이야 오너민들이니까 다 영어를 잘하지만 지금은 이제 체코 그니까 유럽의 유럽 팀이랑 같이 일을 하고 있었어요. 
그래서 제가 전에는 시차가 12시간이었고 이번 지금 팀에서는 시차가 6시간 정도 나는데 그 친구들이 막 다 영어를 되게 잘하지는 않거든요.

네

그래도 다들 개발자로 잘 일을 하고 살고 있기 때문에 영어가 엄청 잘해야 된다 특히 개발자로서는 엄청 잘해야 된다 걱정 안 하셔도 좋을 것 같고 충분히 개발 실력만 잘 쌓으신다면 그리고 이제 지금 취업을 하시고 난 다음에 차곡차곡 잘 준비를 하신다면 내 생각에는

크게 문제는 없을 것 같다. 다만 토익이나 토플 같은 거를 개발자 취업하시겠다고 따질 필요는 전혀 없어요. 
한 번도 저한테 토익 점수 몇 점이냐고 물어본 적이 없어요. 
그래서 그런 시험 준비하실 필요는 전혀 없습니다.

요즘은 gpt 많이 활용한다고 하는데 코딩 테스트를 gpt로 하진 않겠죠. 
이건 한 번도 안 해본 생각이기는 한데 충분히 가능성 자체는 있을 것 같고요 다만 체즈 피티로 코드를 짜셔도

그니까 예를 들어서 그런 알고리즘 링크가 날아오는 경우에 그렇게 이렇게 문제를 풀 수 있을 것 같기는 하네요. 
생각해 보니까 근데 면접관이 들어오는 곳에서는 여러분들이 코드를 짜는 걸 감독관이 같이 지켜보고 있어요.

짜서 완성해서 그냥 그걸 따라치신다고 생각을 했을 때 왜 그렇게 치는지 물어볼 텐데 내가 그걸 과연 답변할 수 있는 전혀 다른 문제일 수 있겠죠. 
근데 요즘 사실 개발자분들 다 gtpp 많이 쓰십니다. 
오셔서 그걸 잘 활용하시는 건 되게 중요한 문제인 것 같고요 다만 코딩 테스트는 디피티 활용 능력을 보는 그런 시간은 아니니까요. 
그런 부분들은 좀 잘 준비를 하시는 게 더 맞는 것 같고요 그리고 그렇게 해서 회사에 들어가신다고 한들

과연 내가 그만큼 찾아온

그거는 해야지

라는 생각을 좀 해봐야 될 것 같아요. 
체트피팅 아마 지금 많이들 써보시고 계실 것 같기는 하지만 돌아가지 않거든요. 
컨트로도 안 돌아가는 경우들이 되게 많아요. 
그래서 결국에는 본인이 개인이 검증해야 되고 왜 안 됐는지 내가 알아야 되기 때문에 제한적으로 도움을 받는다 정도로 생각하시는 게 좋을 것 같아요.

파악할 수 있는 능력을 가져야

오 포트폴리오는 개별로 만든 것과 팀으로 만든 것 어떤 걸 선호하시나요. 
저 개인적으로 면접관으로서의 저의 저에게 물어보신다면 저는 당연히 개인이 굉장히 잘 만든 게 있으면 그게 제일 좋을 것 같고요

그냥 그냥 그 사람이 얼마만큼 할 수 있는지 명확하게 볼 수 있는 거니까요. 
그것만큼 사실 좋은 레퍼런스가 없으니까 저는 그걸 더 선호할 것 같고 힘으로 만든 포트폴리오도 굉장히 완성도가 높다면 눈이 혹할 것 같긴 한데 사실 마마 편에 그런 생각도 들 것 같아요. 
이 친구가 이걸 얼마나 본인이 직접 짰을까 다들 면접 들어와서는 다 자기가 짰다고 하시거든요.

근데 이걸 얼마나 믿을 수 있을까 그런 종류의 어느 정도의 마음에 의심의 씨앗 하나쯤을 가지고 계신 상태에서 포트폴리오 보시게 될 것 같기 때문에 만약에 둘 다 비슷한 퀄리티로 결과물이 나온다라는 전제로 물어보신다면 저는 당연히 개인이 스스로 만드신 게 처음부터 두까지 만드신 게 훨씬 더 매력적이라고 생각을 해 둘 다 다 있으면 어차피 팀으로 만드는 게 싫은 게 있을 테니까 개인적으로 뭔가 시간을 더 들여서 준비하신다라는 의미라면 저는 둘 다 다 가지고 계시는 것도 나쁘지 않을 것 같고요

지금 돌이켜 봤을 때 이런 걸 미리 했더라면 더 좋았을까 싶은 부분이 있나요. 
정보 처리 기사 자격증 요즘도 많이 따시나요.

약간 죽먹어

저는 정보 처리 기사를 땄는데요. 그걸 안 땄으면 그 시간을 안 들렸으면 어땠을까라는 생각을 사실 개인적으로는 합니다. 
왜냐하면 그러니까 정보 처리 기사가 필요한 컨텍스가 어떤 컨텍스냐면 만약에 si 업체에 들어갔을 때 si 업체에 들어가실 때 내가 공공 프로젝트를 한다 그러면 정보 처리 기사 자격증을 언제 땄냐에 따라서 그걸 가지고 연차가 매겨지고

그분의 몸값이 매겨진다고 해요. 근데 사실 만약에 이제 그런 정부 공공 프로젝트나 si 업체가 아니라 예를 들어서 저는 사실 스타트업이랑 그런 일반 이제 개발 쪽 대기업 쪽에서 계속 사실 일을 했는데 그런 종류의 사이드가 아니라 그냥 일반적으로 본인의 서비스를 만드는 회사에서 일을 하시면 정보 처리 기사가 사실 필요가 크게 없거든요. 
자격증으로서의 의미가 전혀 없어요.

다만 이제 정보 처리 기사 만피 전공자로서 정보 처리 기사를 공부하신다고 하면 이제 전공생분들이 학교 때 배웠을 것 같은 개념들이 좀 나오기는 하기 때문에 이후에 이제 그런 부분들을 조금 면접 준비하시거나 공부하시는 데 있어서 도움은 될 수 있다. 
정도의 의미에서 공부를 하시는 건 모르겠는데 저는 만약에 제가 다시 개발을 처음. 
공부할 때로 돌아간다면 정보 처리 기사를 그냥 과감하게 스킵할 것 같습니다.

그리고 제 퍼터의 첫 포폴은 제가 이게 10년 전이에요. 
10년 전 여러분 10년 전 그래서 제가 아마 찾아볼 수 있기는 하겠지만 당시에 제가 이거를 회사에 들고 갈 때 서비스를 어딘가 올려서 갔거든요.

근데 이게 아마 제 생각에는 aws의 당시에 올렸었던 것 같고 저는 이제 여행 서비스를 만들었었어요. 
그래서 어떻게 여행 계획자는 서비스를 만들어서 갔었고 네 그렇습니다. 
근데 아마 제 생각에는 코폴이 남아 있을 것 같지도 않고 코드가 어디 있는지도 잘 모르겠고

저는 사실 그 퍼폴을 어디 가서 보여주지 않거든요. 
이제 더 이상 처음에 신입으로 개발자로 취업하실 때만 퍼폴이 필요해요 이직을 하시고 아마 첫 회사에서 한 1~2년 정도 회사 생활하시고 이직하신다고 하면 그 이후부터는 포트폴리오를 달라고 하는 데가 없을 거예요. 
혹시나 보여달라고 하더라도 대체로 그냥 회사에서 뭐 만들었는지 회사가 이제 실제로 돌아가는 서비스를 만드는 회사라면 그냥 그걸 보여주면 되는 정도기 때문에

제가 이걸 가지고 있지는 않을 것 같습니다.

하는 데서 알고 있는 것도

아빠가 무슨 프로젝트에 참여했고 이런 것들을

네 프로젝트 경험에서 항상 어려움이 무엇이었는지 어떻게 해결했는지 면접 달골 질문으로 물어보시는데 어떤 걸 듣고 싶어 하시는지 의도가 궁금합니다. 
이거 이거를 물어보는 거는 딱 한 이유는 딱 하나인데요. 
이 친구가 우리 회사 들어왔을 때 프로젝트가 프로젝트 항상 쉽지만 않잖아요. 
분명히 어려운 게 있을 거란 말이죠. 
그랬을 때 어떻게 행동할 건지를 예측하기 위함이에요.

이 친구가 좀 끈기 있게 이 문제를 좀 해결하려고 의지가 있고 공부를 하려고 하고 어느 정도 막혔을 때 커뮤니케이션을 할 수 있는지 아니면 그냥 못하겠다고 하고 책임감 없이 행동할지에 대한 그런 뭐랄까요. 
뭔가 근거들

그냥 감을 좀 잡기 위한 거거든요. 그래서 그런데 이제 프로젝트가 있고 그 프로젝트에서 뭔가 어려움가 그 어려움을 해결하는 과정이 여러분들이 이제 면접을 보실 때는 다들 비슷하게 이야기하지 않을까라고 생각하실 수 있는데 이게 결국에 한 사람의 질문에 대답하는 방식은 한 사람의 사고 과정을 되게 많이 보여주거든요. 
생각보다 사람들이 하는 대답하는 방식과 그런 대답하는 내용을 통해서 이 사람이 얼마나 팀과 잘 협업할 수 있을까 얼마나 책임감 책임감 있게 일을 할 수 있을까 생각보다 많이 잡아낼 수 있어요.

그래서 이런 질문을 들으셨다면 아마 이 사람 내가 얼마나 회사에 잘 적응하고 어려움이 있을 때 혼자서 좀 잘 극복해내고 해결해 나갈 수 있는 사람인가를 보기 위한 질문이다. 
생각해 주시면 좋을 것 같아요. 네 그리고 신입 면접에 면접관으로 참여하셨던 경험이 있다고 하셨는데 저는 사실 대단한 실력과 프로젝트는 없는데

지금 취조를 하지 말고 멋진 프로젝트를 만들어야 할까요. 
아니면 취업을 할까요. 그 포트폴리오 말고 어떤 점을 어필하면 좋을까요.

네 저는 이제 그래도 지금 개발자로서 경력이 한 10년 정도 되니까 사실 면접도 많이 다양하게 들어가고 했었는데 신입을 뽑을 때는 기본적으로는 사실 되게 많은 걸 기대하지 않는 것 같아요. 
이 사람이 막 들어와서 혼자서 막 엄청나게 일을 잘했을 거라고 사실 전혀 기대는 별로 안 하고요 그냥 기대를 하는 바는 그래도

너무 기본적인 거를 내가 설명하지 않았으면 좋겠다. 
그러니까 막 클래스는 어떻게 쓰는지 모른다 클래스 자바로 예를 들면 클래스를 어떻게 정해야 하는지 모른다거나 정말 너무 생각하기에 너무 기본적인 것들을 모른다고 생각하면 그건 좀 사실 좀 힘들 것 같아요.

네 그래서 그냥 기본적인 개념들에 대해서 어느 정도 잘 숙지를 하고 있는가 이제 아마 그 커리큘럼이 있을 거고 그 커리큘럼 상에서 데이터베이스의 구성이라든지 기본적인 프로그램 지식들의 이해 그리고 프레임워크를 어떻게 쓰셨는지 그런 부분들을 일단은 다 확인을 해서 이 사람이 그냥 6개월 동안 자리에 앉아만 있었는지 아니면 좀 이거를 스스로 소화시키기 위해서 노력했는지 부분을 좀 먼저 보려고 할 것 같고요 왜 이런 작업을 하냐면

결국에 사실 이제 그냥 한마디로 요약하면 신입을 뽑을 때 면접관으로서 중요한 건 한마디로 이렇게 하면 사실 태도인데 이 태도라 함은 결국에 얼마나 이 사람이 들어와서 책임감 있게 자기가 맡은 일을 할 것인가 그리고 얼마나 빠르게 성장하기 위해서 노력하고 공부할 것인가에 대한 부분이잖아요. 
그랬을 때 이제 6개월 정도를 시간을 들렸으면 생각보다

최종적인 결과물과 이해도에 대해서는 좀 차이가 나거든요. 
그런 것들을 통해서 이 사람이 이 기간 동안 이 정도로 공부를 할 수 있었다면 그래도 앞으로 한 1년에서 2년 정도의 성장은 이 정도로 이루어지겠구나 정도를 사실 확인하고 싶은 이에요. 
그래서 네 그러니까 전혀 신입 개발자가 대단한 실력을 가지고 있을 거라고 저희가 기대하지 않기 때문에 그게 하지 않으셨으면 좋겠고 멋진 프로젝트를 만들 것이라는 것도 별로 기대하지 않아요.

그래서 그런 부분들도 크게 걱정하지 않으셨으면 좋겠고 그냥 아까 말씀드렸던 제가 이제 말씀드렸던 거 세 가지 부분 이제 코딩 테스트 잘 준비하시고요 그리고 지원하시는 업무 분야에 대한 기본적인 인터뷰 질문들 잘 정리하시고 포트폴리오도 정리하되 포트폴리오를 하기 위해서 취업을 미루는 건 저는 제 생각에 전혀 아닌 것 같아요. 
그거는

여러분이 수료를 특히 수료를 하시고 난 다음에 나 자신이 없어 이래서 포트폴리오를 준비를 하신다 그거는 제 생각에는 완전 큰 실수가 되는 것 같고 제 지인 중에 이제 제가 앞서 제가 따로 소개는 안 드렸지만 제가 이제 지금은 아닌데 옛날에 온라인에서 코인 교육을 했던 적이 있고

그리고 제가 개발을 하고 난 개발자가 되고 난 이후에 개발이 굉장히 이제 많은 트렌드가 되면서 사실 저한테 되게 많이 찾아오셨었어요. 
그래서 제가 제가 개발자 되도록 도와드린 분이니까 제일 직접적으로 아시는 분만 한 100분 정도 되는 것 같아요. 
그래서 사실 되게 많은 분들을 도와드렸는데 지인분 중에 한 분은

수려하시고 실력이 부족한 것 같아서 공부를 계속하신다고 한 2년 정도 이 학원 저 학원 다니시면서 계속계속 공부하셨던 분이 있어요. 
그런데 이제 항상 학원을 수료할 때쯤이 되면 내가 이걸 가지고 개발할 수 있을까 불안해하시는 분들이 사실은 많거든요. 
당연히 불안한 게 당연하고요 근데 아까도 말씀드렸지만 절대로 오랫동안 공부하지 마시고 제 생각에는

교육 기관에서 6개월 교육받는 것보다 회사에서 한 달 공부하는 게 훨씬 더 빨라요 돈 받으면서 스트레스 받으면서 일하면 훨씬 더 빨리 배우거든요. 
그래서 취업이 가장 큰 우선순위야 된다고 생각하고 그냥 다른 거 크게 고민하지 마시고 지금 교육 센터에서

진행해 주고 계신 커리큘럼들 잘 따라와 주시고 그냥 프로젝트할 때 자기가 맡은 부분 책임감 있게 최대한 해 주시고 그 정도만 잘 면접장에 들어가서 설명해 주셔도 충분히 좋은 기회 얻으실 수 있을 거라고 생각합니다.

네 토익 점수가 따로 필요 없다면 페일 취업 때 영어를 영어 면접으로 테스트하는 건가요 네 전혀 토익 점수 같다고 물어본 적도 없고 그냥 이제 인터뷰 때 이야기를 본인의 이야기를 어느 정도 할 수 있는지 개발에 대한 걸 어느 정도 영어로 표현할 수 있는지 정도만 봅니다. 
그래서 전혀 단 한 번도 해외에서 근무하면서 프액 점수가 얼마냐라고 물어본 적이 없습니다.

bts인데

마지막으로 이슈 업데이트가 빠른 분야인 만큼 계속 트렌드를 따라가기 위해 어떻게 노력하는지 궁금합니다. 
업무 후에 레터를 부족하거나 따로 스터디 모임 같은 데 참석을 하시나요. 
네 초기에는 네 그냥 온갖 거 다 팔로우 하고 있었던 것 같고요 예를 들어서 프론트 엔드 쪽에 관심이 있으시면 프론트 엔드 뉴스 레터 같은 거 말씀해 주셨던 것처럼 해외 쪽에도 그런 거 되게 많이 있거든요. 
그래서 계속 구독하고 새로운 라이브러리 나왔다 그러면 써보고 이런 종류 작업들을 많이 했던 것 같고 스터디도 사실 만약에

스터디를 만들거나 혹은 참여하실 수 있는 종류의 그런 성향을 가지신 분들이라면 저는 스터디를 참여하는 것도 되게 좋은 것 같아요. 
이후에 조금 더 이야기해볼 수 있겠지만 스터디 같은 경우에는 특히나 이제 지금 신입으로 사실 개발을 취업을 하시는 단계에서는 어떻게 보면은 네트워킹이 그렇게 중요하지 않고 그냥 들어가는 게 일단 중요한데요. 
그러니까 이제 한 3년 차 이상 때부터는 사실 네트워크가 되게 중요하거든요. 
결국 이제 좋은 회사를 들어가시려면

좋은 회사에 다니시는 분들의 추천을 받을 수 있는 것들이 사실은 되게 중요해져요. 
물론 그게 아니 개발자는 비교적 그럼에도 그냥 코딩 테스트나 이런 것들이 객관성이 많이 확보가 되기 때문에 그렇지 않게 들어가시는 분들도 많이 있지만

일단

내부에서만 공유되는 그런 포지션들이 있는지도 모르고 지나가시는 경우도 사실 많기 때문에 스토리 같은 거나 아니면 이런 종류의 웹이나나 아니면 오프라인 행사들에 좀 참여를 하셔서 커리어 잘 쌓아가고 계신 분들 이야기를 최대한 많이 들으시고 이후에 조금 도움받을 수 있게 잘 준비를 하시는 게 제 생각에는 중요할 것 같습니다.

이 정도로 조금 설명을 드려볼 수 있을 것 같아요. 
그래서 일단은 포트폴리오까지 이야기를 좀 한 것 같고요 다음으로 이제 넘어가 볼게요 네 제가 저희가 지금 계속하고 있는 방식처럼 네 질문 계속 남겨주시면 제가 이 파트 끝나고 나면 또 답변드리는 형태로 진행하도록 하겠습니다. 
하나 더 질문 남겨주셨는데 이것까지만 하고 넘어가보도록 할게요

이직할 때 사이드 프로젝트가 필수일까요. 
신입으로 입사해서 제가 맡은 업무에 대해서 좀 더 깊이 있게 파악하는 것에 집중하는 게 낫지 않을까 생각했는데 앞에 말씀하신 개인 쿠폰을 조금 더 보시는 것 같아서 질문드립니다. 
이직할 때는 이직할 때는 포트폴리오가 필요 없어요. 
네 그냥 이력서에 내가 뭘 했다를 기술적으로 정리를 하는 것들이 일반적으로 정리가 되기 때문에

프로젝트 필요 없고 사이드 프로젝트를 한다는 게 사이드 프로젝트가 이력서에 들어가 있다는 게 조금 개인적으로는 양날의 검일 수 있을 것 같기는 해요. 
그러니까 이제 긍정적으로 해석하면 이런 메시지인 거죠. 
이 친구는 회사에서도 개발 일을 하는데 취미도 개발이네

네 그렇게 그렇게 해석이 될 수 있는 정도가 프로젝트를 하신 그리고 이제 예를 들어서 저라면 사이드 프로젝트에 관심이 있으시다면 이렇게 썰을 풀 것 같아요. 
왜냐하면 그러니까 그런데 이게 조금 안 좋게 해석을 하면 이 친구가 회사에 집중 못하고 계속 딴 눈을 파는구나 딴 데 마음이 가는 친구구나라고 해석할 수 있거든요. 
그래서 저라면

이제

사이드 프로젝트를 예를 들어서 하고 있고 관심 있으시다고 하면 사이드 프로젝트를 할 때 이 사이드 프로젝트가 얼마나 내 필사 생활에 좀 더 도움이 되었는지 결국 이 사이드 프로젝트를 하다 보면 내가 하고 있는 것과 굉장히 동떨어진 거를 할 수 있는 경우가 없지는 않지만 예를 들어서 나는 프론트 엔드 개발자인데 요즘 크로스 플랫폼을 핫하다고 해가지고 플로트는 모바일 앱을 개발한다든지 그런 경우가 있을 수 있어요.

그러면 사실 전혀 관련이 없는 거니까 하고 계신 업무와 저는 이런 것들은 개인적으로는 이력서에 들어가는 게 그렇게 좋은 것 같지는 않아요. 
전략상 근데 만약에 이 식을 플로터로 준비하고 계신다 그러면 그건 또 좀 다른 이야기는 하겠지만요 근데 다만 이제 예를 들어서 나는 회사에서도 프론트로 일을 하는데 사이드도 프론트 프로젝트를 했어 그러면 사실 뭔가 회사에서는 기존에 쓰던 스텝들이 있을 테니까

쉽게 도입은 못하지만 내가 사이드 프로젝트를 하면서는 그런 기술들을 써보고 싶었던 것도 쓸 수 있거든요. 
그리고 그걸 써서 괜찮다 싶으면 회사에 가져올 수 있고 회사에서 배운 것들도 사이드 프로젝트에 들어갈 수 있고 저는 이런 종류의 조금 구조라면은 충분히 사이즈 프로젝트도 이력서를 조금 빛나 보이게 할 수 있는 장치로는 활용할 수 있을 것 같아요. 
그래서

그냥 아까 말씀드렸던 것처럼 난 회사에도 개발을 하고 취미도 개발이야 정도의 사실 인상을 줄 수 있으면 그런 거는 저는 개인적으로 나쁘지 않다는 생각은 드네요.

네 그러면 한번 진행 다음 내용 또 진행해보도록 할게요 네 비전공자에 대해 잘 알 수 있을까요라는 질문도 굉장히 많이 해주셔서 아예 파트를 하나 빼봤고요 네 제가 생각하는 비전공자로서의 강점과 약점은 이런 부분들이 있을 것 같아요.

이 부분을 조금 이야기하기 전에 앞서서 그냥 비전공자분들이 이제 제가 아까도 질문을 해 주셔가지고 거기에 대해서 좀 간단하게 답변을 드렸지만 비전공자로서 어려움은 없냐라고 많이 말씀을 하실 때 저는 사실 정말 가장 어려웠던 거는 이제 처음에 6개월 동안 국비 지원 교육 받으면서 처음에 한 3개월 정도 라는 하나도 모르겠는데 옆에서 너무 잘할 때 그때 조금의 자괴감

사실 경험을 했다. 정도가 가장 기억이 많이 나는 부분이고요 싱가포르에 있고 사실 싱가포르는 한국에 비해서는 그래도 연봉 레인지가 훨씬 더 높은 편이에요. 
그래서 억대 연봉 받으시는 분들도 사실 되게 많은데 주위에 전공생 아니신 분들 되게 많아요.

저 사람도 중동 생

그래서

꼭 전공

개발과 컴퓨터

금산처럼

공학을 컴퓨터 공학 컴퓨터 공학을 전공했다는 게 개발자로서의 빛나는 커리어를 보장하는 것은 전혀 아니다. 
그리고 또

컴퓨터를 이제

로 전공하신 분들 중에서 오히려 약간 이런 케이스들이 많은 것 같아요. 
그러니까 제가 컴퓨터 공학을 전공을 했는데 내 주위에 괴물들이 있었어 얘네들 막 중학교 때부터 코딩을 했고 그래서 이렇게 정말 말하는 것보다 코딩이 편한 것 같은 친구들이 있었어가지고 그런 친구를 보니까 너무 자괴감이 들어서 나는 개발 안 할 거야 사실 이렇게 포기하시는 분들도 많거든요.

그래서 그러니까 내 눈을 어디에 두느냐가 사실 어떻게 보면 초반 처음에 개발자가 되는 과정에 있어서의 스트레스 정도가 정해지는 것 같은데

어

전공을 했다고 해서 그렇게 다 잘하시지도 않고 그렇기 때문에 전형 비전공자라고 해서 내가 전공자들에 비해서 못할 것이다라고 생각을 하지 않으시면 더 좋을 것 같아요. 
다만 이제 당연히 처음에 한 1~2년 정도는 그치 이제 전공생분들이 한 4년 정도 학교를 다니면서 싸우셨던 것들이 있기는 하니까 그런 것들이 특히 코딩세스 같은 데서는 조금 도움은 될 수 있다.

하지만 노력해서 못 따라잡을 정도는 아니다라고 저는 개인적으로 생각하고요 우선 비전 공사 개발자 비전공 개발자분들의 강점은 저는 개인적으로 조금 시각적인 부분에 강한 면모가 있는 것 같아요. 
이제 컴퓨터를 전공하시는 분들이 대체로

그런 이제 시각적인 부분에 센스가 없으신 경우들이 많아서 컴퓨터 공학을 선택하시는 경우들이 많은 성향상 그래서 프론트 엔드 같은 것들 혹은 모바일 쪽 개발 같은 부분들은 사실 전공생분들이 좀 잘 안 건드리시는 분야인 것 같아요. 
그래서 실제로는 그런 업무들을 맡겨봐서 잘 못하시는 경우가 많고 반대로 이제 비전공자분들의 경우에는 이게 막 내가 컴퓨터가 좋고 재미있어서 시작하셨다기보다는 개발자라는 그런 업무 자체의 매력을 느끼셔서 시작하신 분들이 많다. 
보니까 그런데

이제 막 그런 컴퓨터가 어떻게 구동되는지에 대한 사실 깊은 지식을 쌓을 수 있는 시간적인 여유가 없었다. 
보니까 내가 비즈니스 로직을 짠다거나 내가 짠 코드의 성능을 향상시켜야 크게 매력을 못 느끼시는 거죠. 
왜냐하면 이게 실제로 cpu와 메모리 단에서 어떤 식으로

동작이 이루어지는지에 대한 이해가 아무래도 비결이 같을 수밖에 없으니까요. 
그러니까 보이는 데 조금 더 눈이 가는 거예요. 
그러니까 프론트 엔드 브라우저 상에서 개발할 때 브라우저 상에서 내가 이거를 코드를 치니까 이게 나오네 그리고 모바일에서 내가 앱을 만드니까 이게 내가 버튼이 눌려지고 이게 이런 식으로 작동을 할 수 있네 그런 것들이 조금 더 시각적인 부분에서 강한 면모를 보이신다는 게 가장 일반적인 특성이 아닌가라는 생각은 들어요.

이거는 강점이다. 약점이다라고 말할 수 없는 부분인 것 같기는 하지만 어쨌든 한번 가장 중요한 특성으로 제가 생각하는 가장 중요한 특성으로 적어봤고요 그리고 커뮤니케이션 능력이 우수한 경우가 많다라고 이것도 어느 정도 모든 사실 사람이 그렇지 않겠죠. 
그러니까 전공생 분들도 말 잘하시는 분 그런 글 잘 쓰시는 분들도 분명히 계시지만 비교적 이제 비자금으로 이런 개발

사실 생각하시는 분들은 그래도 다른 종류의 그런 업무적인 그런 경험들이나 혹은 다른 전공을 경험하셨을 가능성이 많기 때문에 특히 이제 문과 쪽에서 사실 오신 분들이라면 그런 부분에서 커뮤니케이션 능력 그러니까 내가 뭘 하고 있는지 설명하고 그리고 기획자라든지 디자이너라든지 같이 일을 해야 되는 순간들이 많이 있을 텐데 사실 완전 초기에 지금 이제 취업을 하시는 단계에서는 커뮤니케이션 스케일 자체가 되게 중요한 요소는 아닐 수 있어요. 
어쨌든 취업을 해야 되고 취업을 하기 위해서 신입 개발자를 뽑을 때

더 중요하게 생각하고 어떻게 보면은 얘가 기본적인 개발 성을 갖추고 있느냐일 가능성이 많기 때문에 그런데 커리어가 개발자로서 커리어가 쌓이면 쌓일수록 훨씬 더 커뮤니케이션 능력이 많이 중요해져요. 
그랬을 때 저는 이게 이제 장기적인 커리어 관점에서는 굉장히 중요한 능력이라고 생각을 하고요 그리고 이제 사용자 관점에서 좀 더 생각을 하시는 경향들이 있는 것 같아요.

정말 완전 나는 중학생부터 개발했어 이러신 분들은 정말 코드 레벨에서의 내가 코드를 짰고 이게 얼마만큼 성능이 개선됐고 이런 거에서 굉장히 히어를 느끼시거든요. 
저는 처음에 한 3년 정도는 그걸 이해를 못했어요.

왜 변태 같이 저도 개발자지만 변태 같이 저걸 보고 저걸 개선을 했다고 막 희열을 느낄까 저는 오히려 이제 훨씬 더 사용자 관점에서 이게 어떤 식으로 내가 어떤 가치를 제공하고 이런 게 훨씬 더 중요했던 입장에서 네 그런 부분들을 좀 이해하기 힘들었는데 근데 이제 인터뷰 준비도 계속하고 컴퓨터에 대해서 좀 더 이해하게 되고 알고리즘이나

그런 자료 구조가 어떤 식으로 컴퓨터 상에서 동작하게 되는지를 좀 이해하고 나니까 그런 부분들이 재미있어지기는 하더라고요 다만 이제 비전공자분들은 대체적으로는 그런 이제 컴퓨터 사이언스 백그라운드가 부족하기 때문에 조금 더 사용자의 관점에서 그러니까 내가 이제 앱을 써왔고 내가 웹사이트를 써왔던 방식으로 서비스를 보게 될 가능성이 많기 때문에 좀 그런 관점에서 훨씬 더 좋은 피드백을 주실 수 있는 가능성이 있다.

라고 생각을 할 수 있을 것 같아요. 
다만 이제 말씀드렸던 것처럼 이게 이제 컴퓨터 사이언스 쪽에 대한 지식이 쌓이지 않으면 기술적으로 이 코딩을 하는 데 있어서의 기술적인 깊이에 별로 재미가 안 생겨요. 
흥미가 안 생겨요. 그래서 이제 제가 이후에도 말씀드리는 부분 중에 하나지만 계속 좀 공부를 하셔서

처음에 사실 이제 1~2년 정도는 아마 특정 업무 분야로 시작을 하시면 그 기술 그 자체를 배우는 데 조금 시간이 없으실 텐데 그걸 공부하시느라 근데 이제 시간이 조금 지나시면 그래도 조금 사이드로 계속 시간을 쓰셔서 자료으로라든지 알고리즘이라든지 이런 것들 그리고 컴퓨터가 어떻게 작동하는지에 대해서도 조금 계속 꾸준히 공부를 하시다 보면

기술적인 부분에도 점점 더 관심이 생기거든요. 
그래서 그런 시간을 조금 쓰셨으면 좋을 것 같고 네트워킹의 경우에는 이제 전공생 본인들의 경우에는 이제 다 자기 선배들이 어디 가서 개발하고 있는 경우들이 많으니까 사실 구글 인턴이나 이런 거 하시는 분들이 한국에서 구글 인턴 할 수 없다. 
이런 분들 이야기 들어보면 대체로 전문자분들이 많은 것 같아요. 
선배가 가 있어서

인턴 인터뷰 기회가 생겼어요. 그런 케이스들이 많은 것 같기는 한데 근데 이제 딱 신입 그 시기만 지나고 나면 오히려 이제 비전공자분들이 그래도 다른 종류의 네트워크도 또 있으시고 마음만 먹는다면 이제 개발자 그런 커뮤니티 같은 데서 활동을 좀 하시거나 아니면 오프라인 행사에서 네트워킹 하시는데 조금 더 활발하게 참여하시는 경우들이 많은 것 같아서

네 왜냐하면 이제 전공생분들의 경우에는 본인 네트워크가 있으니까 외부에 나가서 더 많은 사람을 만나야겠다고 별로 고민을 안 하시는 경우가 많을 것 같은데 비전공자분들의 경우에는 내가 주위에 아는 개발자가 별로 없으니까 좀 나가서 사람들 만나봐야겠다 하는 경우들이 좀 많은 것 같거든요. 
그래서 네트워킹만 좀 잘 살리시면 오히려 그런 부분에서도 더 좋은 네트워크 싸하셔서 이직 잘하시는 분들도 많이 봤고요

그리고 이제 아까 커뮤니케이션 능력이나 사용자 관점 관련해서 조금 관련이 있는 부분이지만

이제

지금까지 여러분께서 쌓아오신 다른 종류의 경험들이 분명히 개발에도 도움이 되거든요. 
결국에 똑같은 생각을 하는 사람들이 팀에 모여 있을 때 비슷한 제품이 나올 수밖에 없는데 다양한 관점이 제품에 들어와야 훨씬 더 나은 제품들이 나올 수가 있어요. 
그래서 그런 부분들도 좀 같이 생각해 보시면 좋을 것 같고 그리고 이제 그냥 그냥 이제 기술적이나 그런 부분뿐만 아니 아니라 내가 다른 업계에 왔을 때 이걸 기술적으로는 이렇게 해결할 수 있지만

사실 문제를 해결하는 거는 굉장히 다양한 방식들이 있거든요. 
그래서 그런 부분들을 생각해 주시면 좋을 것 같고 간단한 예시를 하나 들어보면 이제 예를 들어서 웹 프론트 개발을 해요. 
요즘은 리액터 많이 쓰실 것 같은데 ctm이나 css랑 그냥 기본적인 자바스크립트로 짜셨을 수도 있고요 네 코딩을 하면 예를 들어서 이제 로그인 로직을 짤 때

이제

로그인 로직을 짤 때 이메일이랑 비밀번호를 넣어서 데이터베이스에다가 데이터를 집어넣고 로그인을 할 때는 그거를 확인을 한 다음에 이제 토큰을 넘겨준다든지 쿠키에 박는다든지 그런 식으로 보통 처리를 하잖아요. 
그랬을 때 예를 들면 이제 비즈니스 단에서 제품에 그런 종류의 피드백을 할 수가 있어요. 
내가 지금

안드로이드나 혹은 ios 기기로 이 서비스를 들어가서 이메일을 쓰려고 하니까 첫 글자가 자동으로 대문자로 바뀐다 이거 되게 불편한 것 같은데 그래서 내가 이메일을 썼는데 이게 첫 글자가 대문자로 바뀌어서 로그인이 로그인 정보가 일치하지 않는다고 나오고 실패했다. 
이거를 대문자로 넣어도

그러니까 중간에 대문자로 넣어도 그냥 다 동일하게 만들어주면 안 되냐 라는 종류의 비즈니스 요구를 하실 수가 있어요. 
그러면 이게 그냥 순수하게 개발적인 관점에서만 접근을 하면 그런 생각을 하게 되는 거죠. 
데이터베이스에는 소문자로만 이메일이 들어가 있고 비밀번호를 매칭을 해야 되는데 이게 예를 들어서 대문자가 중간에 하나 처음에 들어갔다거나 중간에 대문자가 있으면 이걸 어떤 식으로 알고리즘을 짜야

데이터베이스를 내가 전달받는 이메일에 대문자가 들어왔을 때 이거를 전수 케이스로 알고리즘을 찾아서 돌릴 수 있지 아니면 대문자로 들어오면 이거를 다 소문자로 전환해가지고 데이터베이스에 넣고 그런 식으로 추가적인 작업을 해줘야 되나 그렇게 생각할 수 있는데 그냥 정말 간단하게는 사실 이걸 처리해야 되는 방법은

사용자가 텍스트를 입력했을 때 첫 글자가 대문자로 바뀌지 않으면 되는 거잖아요. 
근데 정말 html 태그에 인터 태그에 그냥 그 옵션이 있거든요. 
그러면 사실 이제 이거를 그런 그런 개발적인 기술적인 알고리즘이나 이런 종류의 관점에서 생각하지 않는 분들은 그냥 대문자로만 안 바뀌면 되는 거 아니야라고 생각하실 수 있어요. 
이런 하나의 예시인데 이런 종류의 다른 경험을 통해서 가지고 있는 다른 그런 관점들이

그러니까 아까 이제 앞서 이거를 기술적으로 풀었다면 2~3일 걸렸을 문제를 사실 html의 태그 하나만 옵션 하나만 집어넣으면 되는 문제이기 때문에 3분 정도 짜리의 문제로 바꿀 수가 있는 거죠. 
그러니까 이런 종류에서 사실 비전공자분들이 가지고 계시는 그런 경험들이 굉장히 큰 강점이 되기도 합니다.

그래서

그런 식으로 조금 생각을 해주시면 좋을 것 같아요. 
그러면

네

요 비전 공장인데 더 잘할 수 있을까요. 
관련해서 질문을 좀 남겨주시면 좋을 것 같아요. 
마지막 질문이 아까 이제 남겨 이 사이드 프로젝트 필수일 거 해 주셨던 아까 답변을 드렸던 질문이어가지고 지금 이제 저희가 벌써 세션 진행한 지 1시간 15분 정도 됐네요. 
아직까지도 네 굉장히 많은 분들께서 1시간 넘는 시간 동안 지금 참여해 주고 계신데

제가 한 30분 30초 정도 시간을 더 드릴 테니까 좀 질문 남겨주시면 제가 답변을 드려볼 수 있도록 하겠습니다.

네

백규 님 코에는 제가 잠깐 못 보던 사이에 휴지가 들어갔군요.

혹시 지금 센터에서 교육받으시는 분들이 서로 다 얼굴을 직접 보셨을까요. 
어떤 분들은 지금 집에 계시는 경우들도 있는 것 같은데 고개를 끄덕끄덕해 주시는 거 보니까 아마 센터에서 함께하신 같은 층이 있으신 분들도 있고 지금 다른 층에 계셔가지고 처음 보시는 얼굴도 좀 있고 그래요 네 답변해 주셔서 감사합니다.

저 사람 이상한 사람이지

그러면 여기 관련해서는 추가적으로 더 질문이 없으신 것 같아서 일단 다음 홈페이지로 넘어가 보도록 할게요 이제 다음 부분은 네 개발이 열어주는 기회들 사실 여기까지도 같은 내용이기는 합니다. 
그래서 네 다른 내용으로 볼 수 있을 것 같아요. 
그래서 이제 개발이 열어주는 기회들이라고 제가 좀 정리를 해봤는데 개발 지금은 아마 이제 개발자가 처음. 
제시하려고 준비를 하시는 단계다 보니까

개발밖에 안 보이실 것 같아요. 그런데 개발이 사실 개발을 공부하시고 나면 개발자만 할 수 있는 건 아니거든요. 
그 이후에도 다양한 커리어적인 기회들이 있어요. 
그래서 지금은 어떻게 보면 제 개발자가 되기 위해서 준비하시는 거에 집중하시는 게 필요하지만 그래도 이다음에는 이런 기회들이 있다. 
정도는 제가 말씀을 드리는 게 앞으로 계획을 세우시는 것도 도움이 될 것 같아서

좀 같이 정리를 해봤어요. 그래서 이제 개발자 이후의 커리어라고 하면 사실 ct나 개발 팀장급은 어떻게 보면 개발자 이후의 커리어라기보다는 개발자로서 커리어를 잘 써나갔을 때 매니저급으로서의 기회라고 생각해 주시면 좋을 것 같고 제가 지금 이제

최근에는 저는 다시 엔지니어 팀으로 옮기기는 했는데 제가 엔지니어 팀으로 옮기기 전에 했던 게 이제 솔루션 아키텍트라는 포지션이에요. 
그래서 이제 기술 기반으로 세일즈 조직 밑에 있고요 보통 대체로는 그래서 이제 직접 세일즈를 하는 건 아니고 세일즈 분들을 지원을 하고 이제

어

이제 세니저분들이 어떤 고객과 미팅을 하다가 고객이 이런 종류의 기술적인 요청을 하거나 질문이 있는데 내가 답변을 하기 힘들다 그러면 추가적으로 질문을 요청을 해 주셔가지고 그거에 대해서 좀 답변을 드리고 고객사의 엔지니어 킹카 같이 일하고 이런 종류의 일들을 많이 하고 요즘은 최근에 제가 한국

tv 프로그램을 잘 안 봐서 잘 모르겠는데 aws 솔루션 sa 분이 굉장히 유명하신 분이 한 분 계시다고 이야기 들었어요. 
한국에서 연봉 2억 받으시는 aws 솔루션 아키텍처 분이 조금 화제가 돼서 이야기를 하셨다고 하는데 제가 하는 일이 사실 비슷한 그런 일을 하고 있고요 그리고 it 기술 기반으로 창업을 하는 그런 기회들도 사실은 많이 있고 이제 만약에 이제 기획자 같은 포지션들도

프로덕트 매니저 프로덕트 오너 테크니컬 프로덕트 매니저 요런 포지션들이 많이 있는데 사실 구글이나 이런 회사들에서는 당연히 개발 팀장급은 말할 것도 없고요 이런 프로덕트 매니저 포지션도 개발을 하지 않은 사람들을 뽑지 않는다라는 그런 종류의 내부 규정이 있다고 해요. 
그래서 채용할 때도 개발을 하던 사람들 개발에 관련된 경력이 있는 사람들이 개발자들과 함께 일할 수 있게 왜냐하면 이제

그런 강한 개발 조직을 가진 입장에서는 개발자 리소스가 너무 소중한 리소스인데 너무 아무것도 모르는 사람을 안 쳐다 놓고 이래라 저래라 시켜서 개발자들의 리소스를 낭비하게 만들 수 없다. 
그런 종류의 기본적인 태도가 있고요 그래서 이제 저런 종류의 제품과 관련된 포지션에도 개발을 하셨던 분들이 가는 경우가 많이 있어요. 
그리고 이제 테크니컬 어번젤리스트라고 해가지고 요즘은 디벨로퍼 릴레이션이 dr이라고도 이야기를 많이 하시던데

디벨로퍼 릴레이셔스 이런 팀으로 와울로도 이야기하시고요 그래서 이제 개발자를 대상으로 개발된 제품들이 있고 혹은 채용의 관점에서 우리 회사가 얼마나 기술적으로 흥미로운 회사인지를 잘 알려야 개발자분들이 많이 오시기 때문에

혹은 이제 제품도 많이 사용해 주시기 때문에 내가 개발을 전공을 했고 그래서 개발자들이 어떤 부분에 관심을 가지고 있는지 어떤 형태로 생각하고 용어를 쓰시는지 그리고 그 사람들의 말에 가장 가깝게 이제 커뮤니케이션하실 수 있는 퍼블릭한 상태 온라인 공간에서나 아니면 오프라인 행사들에서 스피치를 할 수 있다거나 그런 종류의 기회들도 많이 있고 그리고 이제 요즘은 퍼포먼스 마케팅이라고 해가지고 마케팅도

이제 단순히 예전처럼 tv 광고나 버스 광고 같은 걸 하는 게 아니라 이제 페이스북이나 인스타그램 구글 광고 네이버 광고 이런 식으로 굉장히 기술 기반의 마케팅 광고들을 많이 하잖아요. 
이랬을 때 이런 이제 기술적인 기반을 통해서 이제 서비스를 향상시키는 그런 그로스 관련된 포지션들도 있거든요. 
그래서

굉장히 다양한 포지션 기회가 저는 개발자로서 일을 하시고 나면 많이 생긴다고 생각을 해요. 
그래서 이런 기회들이 있기 때문에 일단 제가 드리는 조언은 3년 정도는 개발자로 일단 진득하게 한번 일을 해본다 그리고 3년 정도 일을 하고 난 다음에 내가 주위를 돌아봤고 스스로 나 스스로에 대해서 생각해 봤는데 아 나는 도저히

개발을 해서는 가장 잘할 수 있는 사람은 아닌 것 같다라고 생각이 드신다면 이런 종류의 다양한 커리어 기회들이 있다라는 걸 같이 감안을 하셔가지고 그 포지션에서 일하고 계신 분을 좀 찾아가서 이야기도 듣고 그래서 관련된 포지션으로 넘어갈 수 있도록 준비해 보시는 게 제 생각에는 좋을 것 같습니다.

이 정도까지 네 일단 진행을 했고 이 다음 부분이 이제 해외 취업 관련된 부분인데 제가 한번 질문을 올려 질문을 한번 볼게요 제가 질문 답변드리는 스타일에 또 추가적인 질문 있으시면 질문해 주세요. 
우선 귀정구 무경력의 학사도 데이터 분석으로 입사할 수 있을까요. 
데이터 분석가는

아무 상관없어요. 데이터 분석하는 정말 비전공 백그라운드로 하시는 분들 많고요 싱가포르에서도 그냥 마케팅 일을 하시다가 이제 물론 관련해서 백업하실 수 있는 종류의 경험들이 있으시긴 하셔야겠죠. 
예를 들어서 이제 회사에서 마케팅을 하고 있는데

페이스북 마케팅을 돌려서 그거 성과를 확인한 적이 있다든지 이제 만약에 지금 이제 교육센터에 다니고 계시고 저는 회사 다닌 적도 없고 전공생도 아닌데 데이터로 분수과로 일을 하시고 싶다면 관련된 포트폴리오를 데이터 분석으로 만드셔야겠죠. 
그래서 기본적으로 데이터 분석하는 라이브러리들이 있거든요. 
넌 파이나 판다스 같은 종류의 라이브러리들이 있기 때문에

좋은 데이터셋을 확보를 하셔가지고 특히 가능하다면 이제 내가 지원하고자 하는 회사와 관련된 도메인 관련된 데이터셋을 최대한 많이 확보하셔서 그걸 좀 시각적으로 분석을 하고 그 회사에 비즈니스 상에 조금 유의미한 결과물들을 좀 정리를 하실 수 있는 훈련들을 좀 많이 하시면 좋을 것 같아요. 
아마 관련해서 블로그들이 좀 많이 있는 걸로 알고 있어가지고 그런 것들 좀 최대한 많이 참고하시면 좋을 것 같고

데이터 분석가는 사실상 훨씬 비즈니스 업무에 가까워요. 
그래서 비즈니스에 대한 이해가 있고 얼마나 관심 있는지에 대해서 좀 스스로 생각해 보시는 게 좋을 것 같고요 결국에는 비즈니스 데이터 분석가라는 거는 회사에 있는 데이터를 통해서 회사가 어떤 비즈니스 상의 의사결정을 내리는지에 대해서 도와주는 포지션인 거거든요. 
그래서

그냥 데이터 분석가 멋있다라고만 생각해서 선택하시기에는 제 생각에 좋은 생각은 아닌 것 같고 그래서 오히려 사실 개발은 어느 정도 기본적으로 파이썬이나 이런 걸 좀 쓰실 수 있다고 하면 아마 직접 원판이나 판다스를 쓰지 않았어도 취업 기회가 있을 수 있을 것 같아요. 
당연히 근데 이제 준비를 하신 것도 성공 확률이 높을 것 같고요 다만 훨씬

비즈니스적으로 잘 이해가 있다는 게 훨씬 더 데이터 분석가라는 포지션에서는 중요해 보이기는 합니다. 
데이터 분석과도 근데 사실 내부적으로 엄청나게 많은 갈레들과 포지션이 있어요. 
그래서 예를 들면은 세일즈 옵스 이런 포지션들도 사실 데이터 분석가의 포지션이거든요. 
세일즈 옵스가 하시는 분들이 세일즈를 하시는 건 세일즈하고 관련 있겠는데 세일즈를 하시는 건 아니고요

예를 들어서 지난 3개월간 회사 내에 세일즈 데이터를 분석을 해서 다음 분기에 목표치를 얼마로 달성을 하고 시장에 이런 다양한 숫자들이 이렇게 변화하고 있는데 그게 세일즈에 어떤 결과를 미칠지를 측정을 해가지고 이제 리더십이라고 불리는 위에 매니저들이나 혹은 시레벨들과 커뮤니케이션 해서 우리가 다음 분기에는 이 타겟을 세일즈 팀에게 내려야 되고 각각 리션별로 지역별로 세일즈를 어떻게 어서 숫자를 어떻게 찢어서 가져가고

각각의 세일즈 한 명 한 명은 어떤 타깃을 가져가는 게 맞는 것인가 이런 것들도 사실 데이터 분석과 역할이에요. 
그래서 데이터 분석과도 굉장히 다양한 관례가 있고 정말 다양한 포지션들이 있기 때문에 이 부분에 대해서는 그 내가 어떤 도면에서 일하고 싶다. 
그랬을 때 어떤 포지션이 있는지를 사실 그 관련된 일을 하시는 분들과 조금 직접 만나서 이야기를 들어보시면서 이 포지션이 좀 재미있어 보이네

그러면 이분들이 주로 이런 데이터셋을 쓰신다고 하니까 이걸 가지고 요런 포트플을 좀 만들어봐야겠네 해서 만들어보시고 실제로 현업에서 일하시고 계신 분들께 가져가서 피드백 받고 이 작업을 하시는 게 제 생각에는 필요

좋은 질문 감사합니다.

대기업 갈 정도의 실력은 되지 않는데 그래도 한번 이력서를 넣어보는 게 나을까요.

하나 제가 이거 관련해서 여쭤보고 싶은 부분이 있는데 대기업 할 정도의 실력이 되지 않는다라는 거는 어떤 관점에서 그렇게 판단하시는지 좀 궁금하기는 해요. 
이거를 조금 추가적으로 혹시 댓글로 좀 남겨주실 수 있으면 제가 좀 추가적으로 답변드릴 수 있을 것 같고요 실력이 되지 않는다를 예를 들어서 실력을 어떻게 정의하느냐가 굉장히 다를 수 있을 것 같거든요. 
예를 들어서 나는 코딩 테스트를 봤는데 코딩 테스트 너무 어려워

라고 생각하실 수도 있을 것 같고요 포트폴리오를 직접 만들고 프로젝트를 하다 보니까 아직 개발이 나한테 너무 어려운 것 같아 그런 걸 수도 있어요. 
근데 이제 미 기업은 대체로 그냥 코딩 테스트를 보는 게 일반적이고 사실 코딩 테스트는 저는

누구나 시간을 쏟으면 물론 이제 그러니까 얼마나 빠르게 어느 수준에 도달하느냐는 다를 수 있지만 저는 시간만 쏟으면 사실 누구나 할 수 있는 건 저는 코딩 테스트는 누구나 어느 정도 수준까지 갈 수 있는 게 저는 코딩 테스트라고 생각을 해요. 
물론 초기에 조금 힘든 부분이 없지 않아요. 
왜냐하면 정말 실제로 알고리즘과 데이터 자료 구조를 공부를 해야 풀 수 있거든요. 
그런데 이제 그 정도의 기본적인 자료 구조와 알고리즘을 공부를 하고

처음에 좀 문제를 한 50문제 정도라도 그런 알고리즘 사이트들을 풀어낼 수만 있기 시작한다면 저는 사실 충분히 대기업도 노려보실 수 있다고 개인적으로 생각하거든요. 
그래서 저도 처음에 이제 면접 봤던 기억 중에 하나가 아마 거기가

에스케이

계열사였던 것 같아요. sk 계열사 사실 면접도 봤었고 면접 통과도 했었고 그래서 전혀 저는 사실 못할 건 없다고 생각하고요 네 그래서 이력서 넘어 오시는 거 당연히 나쁘지 않고 그러면 코딩 테스트도 보게 할 테니까 보는 것도 사실 나쁘지는 않을 것 같아요. 
이후에 만약에 그쪽으로

지원하실 의향이 있으시다면 저는 그런데 이제 개인적으로는 해외 취업과 개인 사업에 대한 꿈이 되게 큰 사람이었기 때문에 사실 처음에 첫 회사를 스타트업으로 정하기는 했었는데 이후에도 계속 한동안 스타트업을 다니게 다녔었고요 이거는 본인이 어떤 커리어를 생각하시느냐에 따라서 다를 수 있을 것 같습니다.

30이 넘어도 신입으로 취업이 될 수 있을까요. 
네 저 때도 가능했고요 지금도 되게 많이 하시는 걸로 알고 있어요. 
제가 저는 이제 당시에 준비를 했을 때가 한국 나이로 28대 제가 개발자 취업했던 것 같기는 하고요 당시에 저보다 7살 많은 누님이 계셨어요.

저희 저희 회사에 제일 저희 팀에서 가장 나이 많으셨던 분이셨던 7살 8살 정도 많으셨던 것 같고 그 당시에 아마 한 356 정도셨던 것 같은데 네 문제없이 취업 잘하셨고 회사에서 잘 생활하신다고 이연이 들었었거든요. 
그래서 나이가 서른이 넘어서 취업을 할 수 있을까요는 크게 걱정은 안 하셔도 될 것 같아요. 
충분히 기회는 있는 것 같고요

나이 30 민족은 36

이제 다만 면접관이나 혹은

괜찮을 거야

회사 사람을 채용하는 관점에서 생각을 해본다면

이제 가

내가 신입으로 취업했는데 내 사수나 내 선배가 나보다 나이가 적을 수 있어요. 
오히려 그런 분들이 그런 조금 구조를 불편해하실 수 있기 때문에 사실 제가 생각할 때 오히려 중요한 거는 면접을 보시거나 면접 기회를 보는 것 자체가 어렵지 않을 것 같은데 만약에 그런 조직의 면접을 보시고 거기에 꼭 들어가시고 싶다면 사실 마음이 드신다면 그분들 면접에 들어오시는 비교적 나이가 어리신 분들께

내가 비교적 면접관보다 나이가 많지만 그럼에도 충분히 같이 일을 할 만한 사람이다라는 인생을 사실 풍겨주시는 게 훨씬 더 중요할 거라는 생각은 듭니다.

우리 친구 집에 잘 갔다. 왔어

질문을 좋은 질문을 계속 잘 해주고 계세요. 
제가 계속 계속 답변해 드릴게요 어떤 과정을 통해서 mlai 업체에 계시는지 궁금합니다. 
질문해 주셨고 저는 사실 머신러닝 ai 업체는 지금 처음. 
들어와 있고요 지금 지금 회사에서 일한 지 한 2년 정도 됐고요 머신러닝 ai에 대해서 사실 항상 계속 관심은 있었어요. 
제가 개발자로 일을 그러니까 마지막 지금은 이제 다시 엔지니어로 돌아오긴 했지만

이제 sa로 일하기 전에 제가 엔지니어링에서 계속 일할 때부터 머신러닝 일에는 관심이 있었고 그래서 콜세라나 이런 데 되게 이제 유명한 그런 머신러닝 ai 강의들이 있어요. 
그래서 그런 쪽 강의들도 계속 들었었고 지금 회사 들어와서는 이제 워징의 사자처럼이나 이런 머신러닝 ai 부트 캠프 같은 것들도 있어서 이제 같이 참여하기도 했었고요 그래서 계속 관심은 있었고

다만 이제 저는 사실 머신러닝 ai 업체 저희 지금 업체인데 박사 하시고 이런 분들도 되게 많이 있어요. 
저희 회사에는 그래서 이제 데이터 사이언티스트 포지션으로 처음에 입사를 하게 됐던 건 아니고 저는 이제 데브옵스나 혹은 백엔드 데이터 엔지니어링 쪽으로 사실 입사를 하게 돼서 지금 저희 관련해서 그런 업무를 더 주로 하고 있고 다만 이제 관심이 있어서 머신러닝 ai 쪽에서는 계속 공부를 하고 있기는 합니다. 
개발자의 장점이

사실 어떤 업계든 좀 마음 편하게 옮겨 다닐 수 있다는 장점이 있어요. 
그래서 머신러닝 ai 업계라고 해도 그런 회사라고 해도 프론트 엔트의 개발자 당연히 필요하고요 그리고 이제 체질 피티 같은 경우에도 그런 것들 있잖아요. 
staapi 형태로 제공하니까 그 api를 사실 제공해 주려면 백엔드 엔진도 좀 당연히 필요할 거고요 그러니까 업계를 바꾸는 거는 개발자한테는 사실 큰 어려움은 아닌 것 같아요.

어떤 상황에서든 할 수 있는 부분인 것 같아서 그 부분은 사실 크게 네 어깨를 바꾸는 건 크게 걱정하지 않으셔도 될 것 같다는 생각은 듭니다.

좋은 회사를 선택하는 팁이 있을까요. 
네 좋은 회사 선택하는 팁

어

굉장히 좋은 질문이고 사실 중요한 질문인데요. 
그러니까 회사의 규모가 크면 어느 정도는 그래도 인터뷰 프로세스나 절차들이 있고 비교적 여러 라운드 인터뷰를 거치기 때문에 막 너무 이상한 사람이 있지는 않다는 장점은 있는 것 같아요. 
그래서 어느 정도 규모가 있는 회사를 선택할 수 있다면

그랬을 때 처음에 너무 이상한 사람 주위에 이제는 안을 수 있다. 
생각을 했으면 좋을 것 같고 저는 개인적으로는 이제 항상 매번 내가 큰 회사만 가고 싶은 건 아니니까요. 
그랬을 때 이제 회사를 예를 들어서 어느 정도 회사 생활도 했고 이제 스톡옵션 같은 것도 좀 받아서

도전도 해보고 싶고 그런 생각이 있으신데 회사를 준비를 보고 계신다 그런 상황일 수도 있으니까요. 
그럴 때 생각을 한다면 사실 저는 그러니까 면접을 보는 과정이 반드시 면접관이 면접 후보자를 면접하는 과정이라고는 생각하지 않아요. 
면접을 보시는 당사자분들도

가능하면 오프라인에서 면접을 보도록 좀 최대한 환경을 만드셔서 요청을 회사에다가 요청을 해서 우리 이번에는 이번 주에는 좀 어려워서 줌으로 보자 이런 식으로 이야기를 하시더라도 내가 회사로 찾아가겠다 해가지고 회사에 찾아가서 다른 사람들이 어떻게 일을 하고 있는지 내가

지나가는 동안 사람들이 어떤 식으로 커뮤니케이션 하는지 면접관에 다른 사람들과 어떻게 커뮤니케이션하고 나한테 어떤 식으로 질문하고 무엇을 물어보고 이런 것들이 저는 다 힌트라고 생각해요. 
그래서 그리고 이제 또 질문도 많이 하셔야 되고요 면접에 들어가서는 그냥 물어보는 것만 답변하고 치고 나오는 게 아니라

회사에서는 어떤 식으로 코드 리뷰를 하시나요. 
어떤 식으로 평가를 하시고 평가가 어떤 주기로 이루어지나요. 
그 평가 기준은 어떻게 되나요. 그런 것들 그러니까 그런 종류의 다양한 질문들을 면접 차원에서 계속 좀 잘 하셔가지고 이 회사가 정말 내가 다니고 싶은 회사인지 사실 잘 정하는 게 중요한 것 같고 제가 제일 처음에 근데 그것보다 사실 그거 앞에서 가장 중요한 거는 제가 제일 처음에도 왜

개발자가 되고 싶은지 한번 생각해 보시라고 말씀을 드렸던 것처럼 회사를 정할 때도 저는 비슷하게 준비를 하셔야 되는 것 같아요. 
나에게 좋은 회사가 어떤 회사이냐를 사실 좀 먼저 생각해 보시는 게 저는 중요하다고 생각을 하고요 어떤 분들에게 좋은 회사는 약은 없는 회사가 좋은 회사일 수도 있고요 좋은 사수가 있는 회사가 좋은 회사일 수도 있고 나는

별로 그런 거 사실 중요하지 않고 돈을 되게 많이 줬으면 좋겠을 수도 있고 아니면 사실 신입으로 일해봐야 큰돈 이렇게 되게 좋은 연봉을 받으면서 일하지 못하니까 그럴 거야 나는 처음에 연봉을 엄청 주지 못하더라도 그래도 스톡 옵션이라도 조금 줄 수 있어서 좀 미래를 배팅해볼 수 있는 정도의 회사였을 수도 있고 그래서 일단은 가장 제가 생각할 때 가장 중요한 건 나에게 좋은 회사가 무엇이냐를 먼저 정하는 게 제일 중요한 것 같아요.

그다음에 아까 제가 말씀드렸던 것처럼 네 회사도 한번 가서 보시고 사람들이 어떻게 커뮤니케이션 하는지도 보시고 그런 것들이 제일 중요할 것 같고 저는 개인적으로는 사람이 제일 중요한 사람이기는 해요. 
그래서 팀원이 어떤 사람이고 그 사람들이 어떤 식으로 일을 하고 이런 것들이 중요해서 저희 그런 것들이 제일 많이 물어보고 오는 편인 것 같기는 한데 말씀드렸던 것처럼 사람마다 그런 부분은 좀 달라질 수 있을 것 같기는 합니다.

질문을 질문이 계속해서 올라오고 있어요. 
네 언리얼 엔진 개발자로 취업 준비하고 있는데 취업할 수 있는 방향이 여러 가지 갈래가 있더라고요 게임 개발도 있고 디지털 트윈도 있고 br 콘텐츠 등에서 수요가 있는 걸로 알고 있는데 혹시 어느 쪽을 먼저 준비하는 게 좋을지 혹은 앞으로 어떤 쪽이 더 수요가 있을 것 같은지 의견이 궁금합니다. 
제가 게임 개발자가 아니어서 사실 이 부분에 대해서 제가 전혀 알지를 못하는데요.

제 지인 분 중에서 한 분이 이제 게임 쪽 개발하시다가 최근에 메타벅스 쪽으로 회사 창업하신 분이 계세요. 
그래서 이분은 제가 어떤 분인지 모르겠지만 제가 이제 뒤에 앞에도 qr 코드 하나 보여드렸고 뒤에도 다시 한번 보여드릴 텐데 그거 스캔하셔가지고 저한테 링크 리드로 친구 신청해 주시고 저한테 메시지 보내주시면은 제가 그분을

소개해 드리거나 혹은 이거에 대한 질문을 받아서 제가 전달드릴 수 있도록 할게요 그분께서 또 이런 강의 콘텐츠도 지금 만들고 계신다고 알고 있어가지고 그런 식으로 제가 소개해드릴 수 있을 것 같습니다.

개발회사에서 일하는 것과 다른 업종 회사에서 개발 부서에서 일하는 것과 어떤 차이가 있을까요. 
첫째 첫 취업은 개발회사에서 하는 것이 좋을까요. 
굉장히 좋은 질문이고요 개발 회사라 하면 본인의 서비스를 만드는 회사 같은 도 있겠죠. 
한국이면 네이버 카카오 외국이면 구글 페이스북 이런 회사들 아마 말씀하시는 걸 텐데요. 
어떤 차이가 있냐면

요즘 되고 싶은 이어 다정하고

오유 한 사람이야

그래서 다름이에요.

회사 생활을 아직 한 번도 안 해보신 분들이라면 감이 조금 으실 수 올 수 있을 것 같고요 해보신 분들이라면 어떤 말인지 어느 정도 이해가 있으실 텐데 회사마다 주인공이 달라요 그니까 세일즈 조직이 되게 강한 조직이 있고요 마케팅팀이 되게 강한 조직이 있고 그러니까 본인들의 서비스를 만드는 것은 대체로 개발팀이 굉장히 강한 곳들이 많아요. 
그랬을 때 회사에

회사의 힘이 어느 쪽에 실려 있느냐가 생각보다 회사에서 일을 할 때 얼마나 편리한가와 좀 많이 영향을 미치기는 하거든요. 
그래서 저는 개인적으로는 이제 개발 본인의 서비스라는 개발회사의 취업 일을 하는 걸 훨씬 더 선호하고요 지금도 사실 그런 회사에 있고요

그랬을 때

이제만약에 다른 업종에서 개발팀이 있는 조직이면 사실 이제 서포팅 펑션이라고 해가지고 지원 업무를 좀 더 가깝게 취급받는 경우들이 많은 것 같아요. 
그래서 나한테 업무 요청을 하는 사람이 내가 어떤 걸 해줄 수 있고 어떤 걸 할 수 없는지에 대한 이해가 없는 경우가 많아서 그걸 이제 개발자 입장에서 커뮤니케이션 하는 조금 비용이 더 많이 발생한다 다만 개발 본인 서비스가 있고 개발하고 개발팀이 되게 중요한 회사에서는

대체로 이제 그런 종류의 불필요한 커뮤니케이션 코스트를 낮추기 위해서 사람을 뽑을 때도 그런 관련된 일을 했던 사람들을 뽑는 경우가 많기 때문에 개발자 입장에서는 조금 덜 설명해도

신 나는 그래

있을 것 같고요 저는 가능하면 본인 서비스가 있는 쪽에서 일을 하시는 게 더 좋다고는 생각하지만 이것도 원하시는 거에 따라 다를 수 있을 것 같아요. 
예를 들어서 내가 나는 핀테크 쪽 나중에 창업하고 싶어 그러면 사실 은행에서

개발 조직에서 일을 하시는 게 수없이 의미가 있을 수 있겠죠. 
은행 예를 들어서 은행이라고 해도 사실 카카오뱅크 같은 경우에는 저는 훨씬 더 개발이 강한 조직일 거라고 개인적으로 생각하긴 합니다만 토스나 그런 것들은 이제 목표가 어디냐에 따라서 그거는 달라질 수 있을 것 같아요.

그냥 이름이 좋다.

말하는 거는 그럴 수도 있고 안 할 수도 있지

좋은 질문해 주셨는데 풀스택 백엔드 데이터 분석 배보웍스 sa 다양한 직무 경험하셨는데 직무 변경하실 때 고민 많았을 것 같습니다. 
선택하실 때 하고 싶은 것을 마음대로 해보자고 생각하셨을까요. 
네 이제 저는 개인적으로 되게 특이한 커리어를 가지고 있는 개발자이기는 해요. 
그래서 이제

쉽게 저는 권해드리지 않는 커리어고요 어떻게 보면 그냥 개발자라는 커리어만 놓고 봤을 때는 어떻게 보면 꼬인 커리어일 수 있어요. 
이제 분명히 한 커리어를 길게 쌓아 나가시는 분들이 그 연봉 상승이 이직이나 이런 부분들에서 연봉 협상이 이러는 데 유리하기는 하거든요.

아무래도 승진이나 매니저가 되거나 이런 부분들에도 사실 유리하고요 그래서 저는 이제 제 커리어가 답이라고 생각하지도 않고 많은 분들에게는 사실 좀 피해야 되는 종류의 커리어를 저는 쌓았다고 개인적으로는 생각을 하고요 질문해 주신 것처럼 저는 이제 정자 대표적인 규정 공자의 강한 특징으로서 굉장히 다양한 분야의 현미가 있었던 사람으로서 마냥 관심이 가면서 해보고 싶었어요. 
그래서 모바일 결과를 해보고 싶은데 근데 이제

되게 열심히 물론 이제 어느 정도의 당연히 근거는 마련을 했죠. 
그래서 기본적으로 사이드 프로젝트도 해서 내가 이거를 할 수 있는 사람이라고는 했고 그냥 이제 예를 들어서 데이터 엔지니어 얘기 해보고 싶다. 
근데 한 번도 안 해봤어 그러면 지금 회사에서 최대한 관련된 거 찾고 콜세라나 강의 같은 거 최대한 찾아서 내가 관련된 부분 백그라운드 쌓고 해가지고 내가 이거 한 번도 안 해봤는데 너희 회사 들어가면 열심히 잘할 수 있어

이 정도로 내가 개인적인 차원에서 이 정도로 노력했어 이런 정도에 사실 근거를 만들어서 넘어갔던 것 같아요. 
그래서 그냥 관심이 가면 어떤 관심이 가는 분야가 생기면 그 분야에 대해서 스스로 준비해서 근거를 만들고 옮겨간다. 
형태로 사실 진행을 했고 저는 개인적으로는 그래서 덕분에 사실 개발이라는 분야만 놓고 봤을 때 굉장히 넓은 부분을 사실 이해하고 있는 실물을 그려서 이해하고 있는 좀 특수한 커리어를 쌓게 되긴 해가지고 저는 개인적으로는 굉장히 만족하고 있기는 합니다.

그리고

아까 앞에서 말씀을 원래는 드리려고 생각을 하고 있어요. 
어느 정도 말씀을 드리기 했고요 솔루션 아키텍트나 이런 포지션들이 사실 한국에서도 제법 이제 비교적 연봉 테이블이 높은 포지션이기도 하고 싱가포르에서도 비교적 마찬가지인 편이어가지고 저의 흥미와 그리고 커리어를 썰 때 얼마나 연봉 수준을 이식할 때 많이 높여갈 수 있느냐 그런 것들 다양한 요소들을 고려를 했던 것 같아요.

식이 떨어지고 있어

5인 정도의 인원이 적은 스타트업은 극소수라 시니어급 개발자가 보인다고 알고 있는데 그 회사에 입으로 들어가도 방해만 될까 걱정입니다. 
그런 걱정은 사실 전혀 하시지 않으셔도 좋을 것 같고요

마지막

그러니까 뽑아 쓰는 이유가 있는 거예요. 
그러니까 이제

거의 거의 동일세

안 뽑히면 저는 이게 이걸 나를 뽑아줄까 안 뽑아줄까를 걱정해야 되는 문제라고 생각하지 내가 뽑혔는데 이런 회사에 들어가서 뽑혔는데 시니어만 있어서 이 사람들에게 누가 될까 걱정이 된다라는 고민은 저는 사실 좀 불필요한 고민이라는 생각은 들어요. 
그래서 그러니까 뽑아 쓰는 이유가 있고요 그러니까 채용을 하는 관점에서

사람을 채용을 해보면 회사는 항상 돈이 없어요. 
그래서 그러니까 한 명을 채용하기 위해서 그만큼 예산을 잡아줬다는 거 그 사람이 필요하기 때문에 뽑는 거거든요. 
그래서 내가 방해가 될까라는 걱정을 하는 건 제 생각에는 채용을 하는 입장에서는 전혀 사실 불필요한 고민이라고 좀 말씀드리고 싶고요

하도 가기 전에

그러니까 시니어가 할 수 있는 일도 있는데 주니어가 신입이 들어와서 시니어의 시간을 벌어주기 때문에 신입을 뽑는 거거든요. 
이제 시니어만 할 수 있는 일들이 있죠. 
그러니까 시니어 5년 차 10년 차들이 본인의 업무 경험을 바탕으로 남들이 풀지 못하는 문제를 풀어내는 시간을 벌어주기 위해서 신입 개발자분들이 오셔서 비교적 쉬운 문제들을

해결해 주시고

그만큼 시간을 사실 벌어주시는 거기 때문에 그런 고민은 제 생각에는 크게 하지 않으셔도 될 것 같아요. 
그리고 이제 그 과정에서 신입 개발자분도 본인의 업무를 계속 잘 처리를 해나가면서 시니어 분들이 하시는 그런 업무들도 어깨 업무로 배울 수 있게 되는 거고요

오늘 잠 들기겠네

그리고 비전공사인 경우 다른 업무를 하다가 오는 경우가 많은데 저는 이전에도 서로 관련 없는 직무로 두세 번 정도 바꾸다가 개발자를 선택한 케이스거든요. 
요즘 취업 준비를 하면서 과거에 다양한 경험이 면접관의 입장에서 끈기가 없어 보인다. 
하고 안 좋게 피드백을 받았는데 이전 커리어들을 왜 포기했느냐 잘 포기한 사람이냐라는 질문에 대해서 자기소개서나 면접에서 어떤 식으로 대처하는 게 베스트인지 궁금합니다. 
이것도 되게 좋은 질문인데요.

아

제가 대표적으로 아마 이제 qr 코드 통해서 인터딩 들어가 보신 분들 아시겠지만 제가 대표적으로 굉장히 이직이 잦은 케이스예요. 
제가 지금 회사를 이제 2년 콕 채워서 다녔는데 제 이전 커리어를 보시면 한 번도 2년 이상 다닌 적이 없어요. 
그래서 저도 그런 질문들을 받기도 하고 근데 그게 이제 한 회사에 들어와서 오래 다니는 게 중요한 회사들이 있어요. 
기업 문화 있는 회사들이 있고 그런 회사는 그냥

포기하시는 게 맞고요 그러니까 그런 회사들을 제가 아무리 잘 설득하려고 해도 사실 불가능하거든요. 
그래서 예를 들면 그런 데이터브릭스라고 해가지고 이제 싱가포르에 제가 면접을 보려고 지원했던 회사 중에 그런 종류의 회사들이 있었고 그런 회사에서 저한테 피드백을 준 게 지난 두 개의 회사에서 2년 이상 근무한 경험이 없으면 우리는 면접을 보지 않는다 오케이 알겠습니다 하고 그냥 안 봤죠. 
그러니까 그런 종류의 굉장히

이제 본인들의 엄격한 기준이 있는 회사를 그냥 회사를 면접을 보지 않는다고 생각하시면 좋을 것 같고요 근데 이제

아

그런 것들이 아니고 일단 면접을 보게 됐는데 면접관이 그런 식으로 질문을 했다라고 하면 그거에 대한 사실 답은 본인이 준비하시는 게 맞는 것 같아요. 
당연히 사실 면접관 입장에서 할 수 있는 질문이고요 면접관 입장에서 당연히 그렇게 생각이 들겠죠. 
이 사람 이것저것 그러니까 세일즈도 했다가 마케팅도 했다가 여기저기 옮겨 다니다가 이번에 다시 개발자 한다고 지금 와 있네 이 사람 개발자는 오래 할 수 있을까라는 생각을 저는 당연히 할 수 있을 것 같고요

거기에 대한 대답을 사실 지난 경험과 잘 녹여서 만들어내시는 그 스토리를 잘 만드는 게 저는 이제 이 질문해 주신 분께서 해 주셔야 되는 작업이라고 생각을 해요. 
그래서 기존의 업무 경험들이 있고 내가 여기에 지금 목표가 있는데 그 과정에서 이제 개발이

좀 자연스럽게 들리는 형태의 스토리가 나와야 될 것 같고요 그래서 이런 경험들을 바탕으로 내가 지금 여기에 가려고 하고 그 과정에서 내가 이 회사에게 이런 기여를 할 수 있을 것 같은데 나는 그 과정에서 이 개발이 되게 나한테 지금 절실하고 되게 중요한 커리어로서 지금 내가 보장을 하고 있다. 
이렇게 잘 스토리를 만드시는 게 중요하고 스토리가 생기시고 나면 주위에 한번 말씀해 보세요. 
말씀해 보시면

이게 말이 된다. 아니면 말도 안 되는 소리 같이 들린다 그렇게 이제 주위에서 피드백을 주실 테니까 그 과정을 통해서 조금 더 그럴싸한 이야기를 만드시는 게 제 생각이 좀 필요해 보이네요.

네 그리고

업무를 할 때 네 업무를 이거는 네 이 세션 전에도 공유해 주셨던 질문 중에도 하나 있었는데 업무를 할 때 gpt 도움을 많이 받고 있는데 업무 의존하는 게 아닌가 고민이 됩니다. 
어떻게 gpt 활용하는 게 좋을까요. 
제 생각에는 저는 개인적으로는 지금 단계에서는 사실

아

새티피티가 대체할 수 있는 게 초급 개발자라는 이야기를 사실 가장 많이 해요.

기본적인 코드는 사실 다 짜준다는 거죠. 
그 관점에서 저는 역설적으로 대체가 되지 않기 위해서는 초급 개발자의 단계를 빨리 넘어서시는 게 필요할 것 같고요 그랬을 때 사실 저는 ct pt를 이용을 해서 코드를 그니까 내가 쓰지 않은 코드를 짜달라고 요청을 하기보다는 코드를 써놓고 리뷰를 받는 거가 사실 가장

유의미하다고 생각해요. 그래서 코드를 직접 쓰시고 커밋이나 혹은 이제 피알 같은 거 만드시기 전에 플리퀘스트라고 하는 기어 터브에서 깃을 사용하실 때 쓰죠. 
그래서 그런 거 만드시기 전에 이제 코드를 조금 넣어가지고 내가 지금 제 코드에서 좀 개선할 부분이 없겠냐 이런 종류의 사실 피드백을 받아서 그러니까 약간

사수처럼 내 코드를 피드백해 줄 수 있는 사수처럼 활용하시는 게 제 생각에는 가장 좋은 활용법이라고 지금은 지금 단계에서는 생각이 들어요. 
근데 이제 실제로 어느 정도 좀 경력이 쌓이시고 그러고 나면은 굉장히 이제 최tpt가 효율성을 높여줄 수 있는 툴이기는 하기 때문에 그런 것들은 이후에는 좀 더 활용해 볼 수 있는 방법은 많이 있을 것 같습니다. 
네 지금까지 해 주신 질문들은 이렇게 일단 정리를

했고요 저희가 지금 한 10분 정도 남은 것 같아요. 
그렇죠 10분 정도 남아가지고 남은 내용들을 좀 풀어가 마무리를 하고 끝내보도록 하겠습니다. 
그냥 제가 이제 남은 질문은 끝까지 다 모아서 질문을 받을 테니까 이제 그냥 남은 질문은 끝까지 모아서 하도 할 수 있도록 그냥 질문이 생기시면 바로바로 지금 캔바 라이브에다가 질문 남겨주시면 좋을 것 같아요. 
그래서 해외 취업 어떻게 준비하냐

그래서 그냥 간단하게 요약하면 일단은 최소한 3개월은 한국에서 먼저 걸려서 하셔야 돼요 해외 취업이라는 게 기본적으로 이제 다양한 나라들에서 가장 기본적인 해외 취업의 컨셉은 우리나라에서 경험과 능력을 가지신 분이 많지 않기 때문에

해외에서 훌륭한 인재들을 모신다라는 게 기본적인 해외 취업의 컨셉이거든요. 
나라들마다 그랬을 때 신입은 우리나라에 와서 도움이 안 돼요 외국 다른 나라들의 관점에서 봤을 때 그렇기 때문에 왜냐하면 이제 신입을 해외에서 데리고 올 바야 자국민 교육시켜서 신입 개발자로 만드는 게 더 빠르죠. 
그래서 2년 정도는 한국에서 먼저 커리어 쌓으시고 그 경험 가지고 오시는 걸 추천한다

그리고 아까 이거는 이제 앞서 질문에서 설명을 한번 드렸었지만 영어는 내가 한 작업을 설명할 수 있는 정도면 충분하다 그리고 이제 한국 대비 이제 생활 물가가 굉장히 다른 부분들이 많이 있을 거예요. 
싱가포르 저는 지금 싱가포르에서 살고 있는데 싱가포르 현재 물가가 특히 집값 같은 게 굉장히 비싼 편이기 때문에 월세로 다 내야 되고 그래서 그런 부분들이 반영을 해서 연봉을 받으시는 게 좋다. 
그래서 그냥 아무 생각 없이 면접 보시고 회사에서

연봉을 제시를 해줬는데 지금 받는 것보다 훨씬 많이 받아서 오케이 했는데 막상 와서 보니까 살기 빠듯한 경우들이 제법 있어요. 
그래서 그런 부분들을 조금 미리 현지 조사를 해보시는 게 좋다. 
그리고 특히 이제 해외에서 취업을 생각하시는 분들이라면 꾸준히 해외에 계신 분들하고 조금 네트워킹하시는 게 좋아요. 
관련 해외 그 나라에 취업하고 싶은 나라에 해외 여행 가실 때 거기 계신 분들 연락해가지고 조금 미리 연락처 받아놓고 연락할 수 있는 관계 만들어놓고 링크 등 통해가지고 이제 친구 신청하시고 미리 질문 드려서

답변해 주시면 감사하다고 계속해서 꾸준히 관계를 좀 잘 만들어주시는 게 제 생각에는 지금 당장은 해외 취업 준비하시지 않더라도 도움이 되는 방법일 것 같고요 네 그래서 저는 이제 당시에 이제 한국에 있다가 저는 상해에서 1년 정도 먼저 생활을 하고 있었는데 그때 당시에는 이제 취업으로 갔던 건 아니고 리랜싱을 하고 있었어가지고 프리랜스 그냥 들고 갔었고 이제 상해에 있을 때 싱가포르 여행을 왔었는데 그때 싱가포르에 너무 좋아가지고 그래서 싱가포르로 와야겠다. 
했었던 거고

네 이제 저는 당시 지금 생각하면 좀 무모했었던 것 같기는 한데요. 
일단 관리에서 한 3개월 정도 아내랑 같이 이제 3개월 정도 생활하면서 인터뷰도 보고 하다가 근데 잘 안 됐어요. 
해외 취업이라는 게 사실 당시에 좀 그렇게 쉽지는 않았어가지고 그냥 이제

어

더 이상 안 되겠다. 그리고 아내가 이제 먼저 싱가포르에서 취업이 돼가지고 이제 같이 와가지고 한 두 달 3개월 만이라고 적어놓기는 했는데 아마 두 달 조금 넘어서였던 것 같고 그래서 거의 한 한 5개월~6개월 정도 이제 발리랑 싱가포르에서 구직해가지고 이제 입사를 해가지고 싱가포르 생활을 시작하게 됐습니다. 
저는 이런 식으로 취업을 하게 됐었고요

그리고 그 외에는 이제 개발 블로그 여력 좀 되시는 분들은 사실 개발 블로그 하시면 좋아요. 
포트폴리오랑 함께 같이 볼 수 있는 부분이 사실 개발 블로그거든요. 
그래서 이 사람이 이 과정을 준비하면서 그날 그날 어떤 걸 배웠고 이거를 어떻게 정리하고 얼마나 여기에 열의가 있는 사람인지 사실 보여주는

굉장히 좋은 요소예요. 그래서 개발 블로그 하시고 채티피티나 컵파일럿 같은 것들도 제 생각에는 꼭 쓰실 수 있으면 같이 쓰시면 좋을 것 같고 네 이제 이 부분도 아까 한번 말씀드린 부분이기는 하지만 이제 첫 1~2년 정도는 당연히 업무하시다 보면 전공생들에 비해서 전공생들이 4년 동안 쌓아온 시간이잖아요. 
그걸 한순간에 따라잡을 수 없는데

네 꾸준히 사실 기술적인 깊이를 쌓으시면 그게 어느 순간 따라잡을 수가 있어요. 
그래서 너무 조급하게 생각하지 마시고 기술적인 깊이를 개발자로 취업하시고 난 다음에는 나는 이제는 조금 내실을 다지겠다. 
생각하시면 좋을 것 같고 취업은 결국 이제 특히나 경력 이직은 페트워크 상이라고 생각해 주시면 좋을 것 같아요. 
그래서 개발자로 이제 한 1년 정도 한 처음에 1년 정도는 개발만 하셔도 상관없을 것 같기는 한데 그 이후부터는

보통 이렇게 네트워킹 이벤트 같은 데도 좀 다니시고 오프라인 행사도 다니시면서 사람들 좀 많이 만나시면 좋을 것 같고 사람들하고 좋은 관계 쌓는 거 계속해서 공부하시는 거 그런 부분들이 제 생각에는 네 지금 과정에서 조금 같이 함께 생각해 보시면 좋은 부분들이라고 생각이 들어요. 
네 이제 이런 질문들도 사실 많이 왔는데 개발 분야를 어떻게 정하면 좋을까요. 
백핸드 갈까요.

프론텐드 할까요. 풀스텍 할까요. 풀스텍 처음에는 좀 힘들까요. 
이런 질문을 되게 많이 많아요. 그래서 많이 받는 질문을 그냥 이렇게 좀 리스트를 정리를 해봤는데 시간 관계상 제가 지금 이거를 다 답변드리기는 조금 어려울 것 같기는 해서 그냥 자주 해 주시는 질문들 좀 보여드리고 넘어가도록 할게요 네 개발에서 다른 분야로 커리어 전화 어떻게 준비해야 되냐 이건 제가 답변을 드렸네요.

개발하기 좋은 직장 환경이라 이 부분 또 제가 아까 대기업 그러니까 이제 좋은 회사란 무엇인가에 대해서 할 때 좀 간단하게 말씀드렸던 것 같고 비교적 저는 개인적으로는

어

본인의 서비스를 직접 만들어서 조직 전체가 개발이라는 프로세스에 대한 존중이 있고 좀 이해가 있는 조직이 저는 개발하기 편하다고 느꼈어요. 
정보 처리 기사 필요한가요 네 저는 필요 없다고 개인적으로 생각한다고도 말씀을 드렸습니다. 
이 정도가 제일 메인 내용들인 것 같고요 아까 혹시 조금 늦게 들어오셨다거나 해가지고 qr코드 스캔 못하신 분들은 지금 스캔해 주시면 해주시고 편하게 링크에 이제 친구 추가 신청해 주셔도 좋고

다양한 채널을 통해서 제가 어떤 사람이구나 좀 더 살펴봐주셔도 좋을 것 같아요.

그러다가 이제 약간 대왕 같은 거 가지고 좋아

이상입니다. 일단

딱 2시간 했군요.

늦은 시간까지 만 분 넘는 분들께서 다 모여 계셔가지고 너무 감사합니다.

혹시 네 오늘 진행 진행해 주셔도 됩니다.

네 혹시 그 캔바에 지금 질문들이 몇 개 올라와 있는데 여기까지 마무리하고

제가 한번 볼게요

끝까지 뽑아 먹으려고

네 질문이 해외 취업 시 나이 제한이나 해외 취업은 할 때는 특히나 나이 별로 안 보시는 것 같고요

네 합니다.

저는 이제 싱가포르에 나온 지 7년 정도 됐는데 나이 대부분 몰라요 제가 그분들의 나이도 모르고 그분들도 제 나이를 모르기 때문에 해외 취업은 오히려 나이가 많다. 
적다에 대한 거는 잘 모르는 것 같고 다만 그런 차이가 좀 있긴 합니다. 
싱가포르 이거는 싱가포르에만 국한된 건데 싱가포르 이제 나이

나이에 따라서 최소한 받아야 비자를 받기 위해서 최소한 받아야 되는 연봉 수준이 있어요. 
그래서 근데 개발자분들은 대체로 그걸 넘기 때문에 크게 문제가 되지 않는데 만약에 지금 나이가 되게 많다라고 하시면 이제 해외 취업을 하기 위해서는 일정 수준 이상의 연봉을 받으셔야 되기 때문에 거기에서 조금 더 이제 어려움이 있을 수 있다. 
정도만 말씀을 드릴 수 있을 것 같아요.

그리고 마지막 질문인데 솔루션 아키텍터가 되고 싶은 지원자입니다. 
아까도 말씀해 주셨지만 개발자들과 협업 때문에 3년 이상 개발 경력이 없으면 뽑지 않는다고 들었습니다. 
지금 하고 있는 건 마케팅 데이터 분석도 공부를 했었고 백핸드와 sql aws 쪽도 전부 공부하고 있습니다. 
정보 중요하지만 솔루션 아키텍처가 되려면 어떤 공부 어떤 순서 어느 깊이까지 공부해야 되는지 알 수 있을까요. 
되게 좋은 질문이고

이제 이거를 답변드리기 전에 사실 제가 먼저 드려야 되는 질문은 어떤 제품을 파시고 싶은지 정하셔야 돼요 그러니까 솔루션 아키텍처라는 분야가 정말 다루는 도메인이 다양해요. 
그러니까 예를 들면 페이스북에도 솔루션 아키텍트가 있고요 구글에도 솔루션 아키텍트가 있고요

다루는 제품군들이 정말 다양하거든요. 
그리고 그 제품이 그 제품을 팔고 싶은 고객분들도 너무너무 다양해요. 
그래서 예를 들면 서스 제품이다라고 해가지고 저희가 쓰는 사스 제품 같은 것들이 어떤 게 있을까요. 
세일즈 포스 이런 것들 그런 제품들이 사스 제품이라고 부르고 혹은 aws나 gcp나 애저 같은 인프라 제품을 팔고 싶은 솔루션 아키텍처인지 그런 거에 따라서 사실 공부할 방향은 너무 많이 달라지는 것 같아요. 
그래서 제 생각에 저라면

질문 주신 분께 가장 최고의 가이드를 드리기 위해서 좀 생각을 해보자면 저라면 일단은 내가 솔루션 아키텍키터로 일하고 싶은 회사를 먼저 정하시고 그리고 그 회사에서 솔솔 아케텍트로 일하는 분을 찾아가세요. 
그래서 찾아가셔서

제가 이 회사에 일하려면 뭘 알아야 되나요라고 물어보시는 게 제 생각에는 가장 가장 지름길이라고 개인적으로 생각을 하고 있습니다.

네 정말 늦은 시간까지 강사님 너무 감사드리고 각자의 자리에서 강사님께 박수 한 번만 부탁드립니다. 
그리고 강수 님께서 얘기해 주셨던 것처럼 링크 데임 통해서

질문 혹시 해주실 거 있으면

또 질문해 주시면 아마 강사님께서도 답변을

알아주시지 않을까

라고 생각이 드는데 오늘 강의 늦게까지 진행했는데 함께해 주셔서 너무 감사드리고 혹시 또 궁금한 게 있다면 새싹 운영진 통해서 문의 남겨주시면 강의 자료나 이런 것들은 전달드릴 수 있도록 하겠습니다. 
감사합니다.

진우 님 뭔가 질문 있으시면 해 주셔도 됩니다. 
네네 그게 다름이 아니라 제가 좀 늦게 와가지고 그 링크를 못 받았거든요. 
다시 한 번 링크 다시 한 번 네 알겠습니다. 
잠시만요 링크는 아니고 제가 아까 공유해드린 화면 공유해드린 qr 코드예요.

오빠 이렇게 해봤어

휴대폰으로 스캔해 주시고 저한테 보내주시면 되겠습니다.

훨씬 꼬들꼬들하대

민주는 오늘 원래 그렇게 많냐

여기서 뭘 노라고 여기 여기서 뭘 노라고

여기서 qr 코드 네 위에 보시면은 아마 링크 돼 있는라고 있을 거예요. 
목록 중에

이렇게 이렇게 뜨는 거야

네 아마 지금 주위에 다른 분께서도 좀 도와주시면 좋을 것 같은데 이제 스캔하시고 나면은 웹 페이지가 하나 뜨는데 거기에 제가 관리하고 있는 다양한 채널들이 있거든요. 
브런치도 있고 링크도 있고

뭐 이런 것들이 있어가지고

이제 아마 링크 딘이 저한테 개인적으로 연락 주시기에 가장 편한 채널이실 것 같아요. 
그래서 그거 통해가지고 저한테 메시지 남겨주시면 제가 답변드릴 수 있도록 할게요 링크 딘으로

메시지 달라는 거야 진짜

감사한다고 해드리면

많이 올라왔는데

오늘 2시간 동안 강사님이 강의해 주셔서 너무 감사드리고 이제 교육생 분들도 이제 퇴장해 드시면 되겠습니다.

사합니다.

사합니다.


clovanote.naver.com